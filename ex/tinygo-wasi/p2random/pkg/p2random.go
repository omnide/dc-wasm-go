// Generated by `wit-bindgen` 0.17.0. DO NOT EDIT!
package p2random

// #include "p2random.h"
import "C"
import "unsafe"
// Import functions from wasi:random/random@0.2.0
func WasiRandom0_2_0_RandomGetRandomBytes(len uint64) []uint8 {
  lower_len := C.uint64_t(len)
  var ret C.p2random_list_u8_t
  C.wasi_random_random_get_random_bytes(lower_len , &ret )
  var lift_ret []uint8
  lift_ret = make([]uint8, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.uint8_t
      lift_ret_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret uint8
      list_lift_ret = uint8(lift_ret_ptr)
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func WasiRandom0_2_0_RandomGetRandomU64() uint64 {
  ret := C.wasi_random_random_get_random_u64()
  var lift_ret uint64
  lift_ret = uint64(ret)
  return lift_ret
}

