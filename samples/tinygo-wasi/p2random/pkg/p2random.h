// Generated by `wit-bindgen` 0.16.0. DO NOT EDIT!
#ifndef __BINDINGS_P2RANDOM_H
#define __BINDINGS_P2RANDOM_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  uint8_t *ptr;
  size_t len;
} p2random_list_u8_t;

// Imported Functions from `wasi:random/random@0.2.0`
// Return `len` cryptographically-secure random or pseudo-random bytes.
// 
// This function must produce data at least as cryptographically secure and
// fast as an adequately seeded cryptographically-secure pseudo-random
// number generator (CSPRNG). It must not block, from the perspective of
// the calling program, under any circumstances, including on the first
// request and on requests for numbers of bytes. The returned data must
// always be unpredictable.
// 
// This function must always return fresh data. Deterministic environments
// must omit this function, rather than implementing it with deterministic
// data.
extern void wasi_random_random_get_random_bytes(uint64_t len, p2random_list_u8_t *ret);
// Return a cryptographically-secure random or pseudo-random `u64` value.
// 
// This function returns the same type of data as `get-random-bytes`,
// represented as a `u64`.
extern uint64_t wasi_random_random_get_random_u64(void);

// Helper Functions

void p2random_list_u8_free(p2random_list_u8_t *ptr);


#ifdef __cplusplus
}
#endif
#endif
