<testsuites tests="12860" failures="111" time="0">
  <testsuite tests="0" failures="0" time="0.000000" name="archive/tar" timestamp="2024-04-26T04:41:39Z">
    <properties classname="archive/tar">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="archive/tar" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	archive/tar	0.000s
# archive/tar
/usr/local/go/src/archive/tar/stat_unix.go:39:27: undefined: user.LookupId
/usr/local/go/src/archive/tar/stat_unix.go:45:27: undefined: user.LookupGroupId
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="99" failures="0" time="0.000000" name="archive/zip" timestamp="2024-04-26T04:41:39Z">
    <properties classname="archive/zip">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="archive/zip" name="TestReader" time="0.000000" />
    <testcase classname="archive/zip" name="TestInvalidFiles" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue8186" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue10957" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue10956" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue11146" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue12449" time="0.000000" />
    <testcase classname="archive/zip" name="TestFS" time="0.000000" />
    <testcase classname="archive/zip" name="TestFSWalk" time="0.000000" />
    <testcase classname="archive/zip" name="TestFSModTime" time="0.000000" />
    <testcase classname="archive/zip" name="TestCVE202127919" time="0.000000" />
    <testcase classname="archive/zip" name="TestOpenReaderInsecurePath" time="0.000000" />
    <testcase classname="archive/zip" name="TestCVE202133196" time="0.000000" />
    <testcase classname="archive/zip" name="TestCVE202139293" time="0.000000" />
    <testcase classname="archive/zip" name="TestCVE202141772" time="0.000000" />
    <testcase classname="archive/zip" name="TestUnderSize" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue54801" time="0.000000" />
    <testcase classname="archive/zip" name="TestInsecurePaths" time="0.000000" />
    <testcase classname="archive/zip" name="TestDisableInsecurePathCheck" time="0.000000" />
    <testcase classname="archive/zip" name="TestCompressedDirectory" time="0.000000" />
    <testcase classname="archive/zip" name="TestBaseOffsetPlusOverflow" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriter" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterComment" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterUTF8" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterTime" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterOffset" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterFlush" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterDir" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterDirAttributes" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterCopy" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterCreateRaw" time="0.000000" />
    <testcase classname="archive/zip" name="TestWriterAddFS" time="0.000000" />
    <testcase classname="archive/zip" name="TestIssue61875" time="0.000000" />
    <testcase classname="archive/zip" name="TestOver65kFiles" time="0.000000" />
    <testcase classname="archive/zip" name="TestModTime" time="0.000000" />
    <testcase classname="archive/zip" name="TestFileHeaderRoundTrip" time="0.000000" />
    <testcase classname="archive/zip" name="TestFileHeaderRoundTrip64" time="0.000000" />
    <testcase classname="archive/zip" name="TestFileHeaderRoundTripModified" time="0.000000" />
    <testcase classname="archive/zip" name="TestFileHeaderRoundTripWithoutModified" time="0.000000" />
    <testcase classname="archive/zip" name="TestRLEBuffer" time="0.000000" />
    <testcase classname="archive/zip" name="TestZip64" time="0.000000" />
    <testcase classname="archive/zip" name="TestZip64EdgeCase" time="0.000000" />
    <testcase classname="archive/zip" name="TestZip64DirectoryOffset" time="0.000000" />
    <testcase classname="archive/zip" name="TestZip64ManyRecords" time="0.000000" />
    <testcase classname="archive/zip" name="TestZip64LargeDirectory" time="0.000000" />
    <testcase classname="archive/zip" name="TestHeaderInvalidTagAndSize" time="0.000000" />
    <testcase classname="archive/zip" name="TestHeaderTooShort" time="0.000000" />
    <testcase classname="archive/zip" name="TestHeaderTooLongErr" time="0.000000" />
    <testcase classname="archive/zip" name="TestHeaderIgnoredSize" time="0.000000" />
    <testcase classname="archive/zip" name="TestZeroLengthHeader" time="0.000000" />
    <testcase classname="archive/zip" name="TestSuffixSaver" time="0.000000" />
  </testsuite>
  <testsuite tests="81" failures="1" time="0.000000" name="bufio" timestamp="2024-04-26T04:41:39Z">
    <properties classname="bufio">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="bufio" name="TestReadStringAllocs" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestReadStringAllocs
    Unexpected number of allocations, got 0.000000, want 1
--- FAIL: TestReadStringAllocs (0.00s)
</failure>
    </testcase>
    <testcase classname="bufio" name="TestReaderSimple" time="0.000000" />
    <testcase classname="bufio" name="TestReader" time="0.000000" />
    <testcase classname="bufio" name="TestZeroReader" time="0.000000" />
    <testcase classname="bufio" name="TestReadRune" time="0.000000" />
    <testcase classname="bufio" name="TestUnreadRune" time="0.000000" />
    <testcase classname="bufio" name="TestNoUnreadRuneAfterPeek" time="0.000000" />
    <testcase classname="bufio" name="TestNoUnreadByteAfterPeek" time="0.000000" />
    <testcase classname="bufio" name="TestNoUnreadRuneAfterDiscard" time="0.000000" />
    <testcase classname="bufio" name="TestNoUnreadByteAfterDiscard" time="0.000000" />
    <testcase classname="bufio" name="TestNoUnreadRuneAfterWriteTo" time="0.000000" />
    <testcase classname="bufio" name="TestNoUnreadByteAfterWriteTo" time="0.000000" />
    <testcase classname="bufio" name="TestUnreadByte" time="0.000000" />
    <testcase classname="bufio" name="TestUnreadByteMultiple" time="0.000000" />
    <testcase classname="bufio" name="TestUnreadByteOthers" time="0.000000" />
    <testcase classname="bufio" name="TestUnreadRuneError" time="0.000000" />
    <testcase classname="bufio" name="TestUnreadRuneAtEOF" time="0.000000" />
    <testcase classname="bufio" name="TestReadWriteRune" time="0.000000" />
    <testcase classname="bufio" name="TestWriteInvalidRune" time="0.000000" />
    <testcase classname="bufio" name="TestWriter" time="0.000000" />
    <testcase classname="bufio" name="TestWriterAppend" time="0.000000" />
    <testcase classname="bufio" name="TestWriteErrors" time="0.000000" />
    <testcase classname="bufio" name="TestNewReaderSizeIdempotent" time="0.000000" />
    <testcase classname="bufio" name="TestNewWriterSizeIdempotent" time="0.000000" />
    <testcase classname="bufio" name="TestWriteString" time="0.000000" />
    <testcase classname="bufio" name="TestWriteStringStringWriter" time="0.000000" />
    <testcase classname="bufio" name="TestBufferFull" time="0.000000" />
    <testcase classname="bufio" name="TestPeek" time="0.000000" />
    <testcase classname="bufio" name="TestPeekThenUnreadRune" time="0.000000" />
    <testcase classname="bufio" name="TestReadLine" time="0.000000" />
    <testcase classname="bufio" name="TestLineTooLong" time="0.000000" />
    <testcase classname="bufio" name="TestReadAfterLines" time="0.000000" />
    <testcase classname="bufio" name="TestReadEmptyBuffer" time="0.000000" />
    <testcase classname="bufio" name="TestLinesAfterRead" time="0.000000" />
    <testcase classname="bufio" name="TestReadLineNonNilLineOrError" time="0.000000" />
    <testcase classname="bufio" name="TestReadLineNewlines" time="0.000000" />
    <testcase classname="bufio" name="TestReaderWriteTo" time="0.000000" />
    <testcase classname="bufio" name="TestReaderWriteToErrors" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFrom" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromErrors" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromCounts" time="0.000000" />
    <testcase classname="bufio" name="TestNegativeRead" time="0.000000" />
    <testcase classname="bufio" name="TestReaderClearError" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromWhileFull" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromUntilEOF" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromErrNoProgress" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromWithBufferedData" time="0.000000" />
    <testcase classname="bufio" name="TestReadZero" time="0.000000" />
    <testcase classname="bufio" name="TestReaderReset" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReset" time="0.000000" />
    <testcase classname="bufio" name="TestReaderDiscard" time="0.000000" />
    <testcase classname="bufio" name="TestReaderSize" time="0.000000" />
    <testcase classname="bufio" name="TestWriterSize" time="0.000000" />
    <testcase classname="bufio" name="TestPartialReadEOF" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromMustSetUnderlyingError" time="0.000000" />
    <testcase classname="bufio" name="TestWriterReadFromMustReturnUnderlyingError" time="0.000000" />
    <testcase classname="bufio" name="TestSpace" time="0.000000" />
    <testcase classname="bufio" name="TestScanByte" time="0.000000" />
    <testcase classname="bufio" name="TestScanRune" time="0.000000" />
    <testcase classname="bufio" name="TestScanWords" time="0.000000" />
    <testcase classname="bufio" name="TestScanLongLines" time="0.000000" />
    <testcase classname="bufio" name="TestScanLineTooLong" time="0.000000" />
    <testcase classname="bufio" name="TestScanLineNoNewline" time="0.000000" />
    <testcase classname="bufio" name="TestScanLineReturnButNoNewline" time="0.000000" />
    <testcase classname="bufio" name="TestScanLineEmptyFinalLine" time="0.000000" />
    <testcase classname="bufio" name="TestScanLineEmptyFinalLineWithCR" time="0.000000" />
    <testcase classname="bufio" name="TestSplitError" time="0.000000" />
    <testcase classname="bufio" name="TestErrAtEOF" time="0.000000" />
    <testcase classname="bufio" name="TestNonEOFWithEmptyRead" time="0.000000" />
    <testcase classname="bufio" name="TestBadReader" time="0.000000" />
    <testcase classname="bufio" name="TestScanWordsExcessiveWhiteSpace" time="0.000000" />
    <testcase classname="bufio" name="TestEmptyTokens" time="0.000000" />
    <testcase classname="bufio" name="TestWithNoEmptyTokens" time="0.000000" />
    <testcase classname="bufio" name="TestDontLoopForever" time="0.000000" />
    <testcase classname="bufio" name="TestBlankLines" time="0.000000" />
    <testcase classname="bufio" name="TestEmptyLinesOK" time="0.000000" />
    <testcase classname="bufio" name="TestHugeBuffer" time="0.000000" />
    <testcase classname="bufio" name="TestNegativeEOFReader" time="0.000000" />
    <testcase classname="bufio" name="TestLargeReader" time="0.000000" />
  </testsuite>
  <testsuite tests="91" failures="0" time="0.000000" name="bytes" timestamp="2024-04-26T04:41:40Z">
    <properties classname="bytes">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="bytes" name="TestEqualNearPageBoundary" time="0.000000" />
    <testcase classname="bytes" name="TestIndexByteNearPageBoundary" time="0.000000" />
    <testcase classname="bytes" name="TestIndexNearPageBoundary" time="0.000000" />
    <testcase classname="bytes" name="TestCountNearPageBoundary" time="0.000000" />
    <testcase classname="bytes" name="TestNewBuffer" time="0.000000" />
    <testcase classname="bytes" name="TestNewBufferString" time="0.000000" />
    <testcase classname="bytes" name="TestBasicOperations" time="0.000000" />
    <testcase classname="bytes" name="TestLargeStringWrites" time="0.000000" />
    <testcase classname="bytes" name="TestLargeByteWrites" time="0.000000" />
    <testcase classname="bytes" name="TestLargeStringReads" time="0.000000" />
    <testcase classname="bytes" name="TestLargeByteReads" time="0.000000" />
    <testcase classname="bytes" name="TestMixedReadsAndWrites" time="0.000000" />
    <testcase classname="bytes" name="TestCapWithPreallocatedSlice" time="0.000000" />
    <testcase classname="bytes" name="TestCapWithSliceAndWrittenData" time="0.000000" />
    <testcase classname="bytes" name="TestNil" time="0.000000" />
    <testcase classname="bytes" name="TestReadFrom" time="0.000000" />
    <testcase classname="bytes" name="TestReadFromPanicReader" time="0.000000" />
    <testcase classname="bytes" name="TestReadFromNegativeReader" time="0.000000" />
    <testcase classname="bytes" name="TestWriteTo" time="0.000000" />
    <testcase classname="bytes" name="TestWriteAppend" time="0.000000" />
    <testcase classname="bytes" name="TestRuneIO" time="0.000000" />
    <testcase classname="bytes" name="TestWriteInvalidRune" time="0.000000" />
    <testcase classname="bytes" name="TestNext" time="0.000000" />
    <testcase classname="bytes" name="TestReadBytes" time="0.000000" />
    <testcase classname="bytes" name="TestReadString" time="0.000000" />
    <testcase classname="bytes" name="TestGrow" time="0.000000" />
    <testcase classname="bytes" name="TestGrowOverflow" time="0.000000" />
    <testcase classname="bytes" name="TestReadEmptyAtEOF" time="0.000000" />
    <testcase classname="bytes" name="TestUnreadByte" time="0.000000" />
    <testcase classname="bytes" name="TestBufferGrowth" time="0.000000" />
    <testcase classname="bytes" name="TestEqual" time="0.000000" />
    <testcase classname="bytes" name="TestEqualExhaustive" time="0.000000" />
    <testcase classname="bytes" name="TestNotEqual" time="0.000000" />
    <testcase classname="bytes" name="TestIndex" time="0.000000" />
    <testcase classname="bytes" name="TestLastIndex" time="0.000000" />
    <testcase classname="bytes" name="TestIndexAny" time="0.000000" />
    <testcase classname="bytes" name="TestLastIndexAny" time="0.000000" />
    <testcase classname="bytes" name="TestIndexByte" time="0.000000" />
    <testcase classname="bytes" name="TestLastIndexByte" time="0.000000" />
    <testcase classname="bytes" name="TestIndexByteBig" time="0.000000" />
    <testcase classname="bytes" name="TestIndexByteSmall" time="0.000000" />
    <testcase classname="bytes" name="TestIndexRune" time="0.000000" />
    <testcase classname="bytes" name="TestCountByte" time="0.000000" />
    <testcase classname="bytes" name="TestCountByteNoMatch" time="0.000000" />
    <testcase classname="bytes" name="TestSplit" time="0.000000" />
    <testcase classname="bytes" name="TestSplitAfter" time="0.000000" />
    <testcase classname="bytes" name="TestFields" time="0.000000" />
    <testcase classname="bytes" name="TestFieldsFunc" time="0.000000" />
    <testcase classname="bytes" name="TestMap" time="0.000000" />
    <testcase classname="bytes" name="TestToUpper" time="0.000000" />
    <testcase classname="bytes" name="TestToLower" time="0.000000" />
    <testcase classname="bytes" name="TestToValidUTF8" time="0.000000" />
    <testcase classname="bytes" name="TestTrimSpace" time="0.000000" />
    <testcase classname="bytes" name="TestRepeat" time="0.000000" />
    <testcase classname="bytes" name="TestRepeatCatchesOverflow" time="0.000000" />
    <testcase classname="bytes" name="TestRunes" time="0.000000" />
    <testcase classname="bytes" name="TestTrim" time="0.000000" />
    <testcase classname="bytes" name="TestTrimFunc" time="0.000000" />
    <testcase classname="bytes" name="TestIndexFunc" time="0.000000" />
    <testcase classname="bytes" name="TestReplace" time="0.000000" />
    <testcase classname="bytes" name="TestTitle" time="0.000000" />
    <testcase classname="bytes" name="TestToTitle" time="0.000000" />
    <testcase classname="bytes" name="TestEqualFold" time="0.000000" />
    <testcase classname="bytes" name="TestCut" time="0.000000" />
    <testcase classname="bytes" name="TestCutPrefix" time="0.000000" />
    <testcase classname="bytes" name="TestCutSuffix" time="0.000000" />
    <testcase classname="bytes" name="TestBufferGrowNegative" time="0.000000" />
    <testcase classname="bytes" name="TestBufferTruncateNegative" time="0.000000" />
    <testcase classname="bytes" name="TestBufferTruncateOutOfRange" time="0.000000" />
    <testcase classname="bytes" name="TestContains" time="0.000000" />
    <testcase classname="bytes" name="TestContainsAny" time="0.000000" />
    <testcase classname="bytes" name="TestContainsRune" time="0.000000" />
    <testcase classname="bytes" name="TestContainsFunc" time="0.000000" />
    <testcase classname="bytes" name="TestClone" time="0.000000" />
    <testcase classname="bytes" name="TestCompare" time="0.000000" />
    <testcase classname="bytes" name="TestCompareIdenticalSlice" time="0.000000" />
    <testcase classname="bytes" name="TestCompareBytes" time="0.000000" />
    <testcase classname="bytes" name="TestEndianBaseCompare" time="0.000000" />
    <testcase classname="bytes" name="TestReader" time="0.000000" />
    <testcase classname="bytes" name="TestReadAfterBigSeek" time="0.000000" />
    <testcase classname="bytes" name="TestReaderAt" time="0.000000" />
    <testcase classname="bytes" name="TestReaderAtConcurrent" time="0.000000" />
    <testcase classname="bytes" name="TestEmptyReaderConcurrent" time="0.000000" />
    <testcase classname="bytes" name="TestReaderWriteTo" time="0.000000" />
    <testcase classname="bytes" name="TestReaderLen" time="0.000000" />
    <testcase classname="bytes" name="TestUnreadRuneError" time="0.000000" />
    <testcase classname="bytes" name="TestReaderDoubleUnreadRune" time="0.000000" />
    <testcase classname="bytes" name="TestReaderCopyNothing" time="0.000000" />
    <testcase classname="bytes" name="TestReaderLenSize" time="0.000000" />
    <testcase classname="bytes" name="TestReaderReset" time="0.000000" />
    <testcase classname="bytes" name="TestReaderZero" time="0.000000" />
  </testsuite>
  <testsuite tests="4" failures="0" time="0.000000" name="cmp" timestamp="2024-04-26T04:41:40Z">
    <properties classname="cmp">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="cmp" name="TestLess" time="0.000000" />
    <testcase classname="cmp" name="TestCompare" time="0.000000" />
    <testcase classname="cmp" name="TestSort" time="0.000000" />
    <testcase classname="cmp" name="TestOr" time="0.000000" />
  </testsuite>
  <testsuite tests="4" failures="0" time="0.000000" name="compress/bzip2" timestamp="2024-04-26T04:41:50Z">
    <properties classname="compress/bzip2">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="compress/bzip2" name="TestReader" time="0.000000" />
    <testcase classname="compress/bzip2" name="TestBitReader" time="0.000000" />
    <testcase classname="compress/bzip2" name="TestMTF" time="0.000000" />
    <testcase classname="compress/bzip2" name="TestZeroRead" time="0.000000" />
  </testsuite>
  <testsuite tests="64" failures="0" time="0.000000" name="compress/flate" timestamp="2024-04-26T04:41:52Z">
    <properties classname="compress/flate">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="compress/flate" name="TestBulkHash4" time="0.000000" />
    <testcase classname="compress/flate" name="TestDeflate" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriterClose" time="0.000000" />
    <testcase classname="compress/flate" name="TestVeryLongSparseChunk" time="0.000000" />
    <testcase classname="compress/flate" name="TestDeflateInflate" time="0.000000" />
    <testcase classname="compress/flate" name="TestReverseBits" time="0.000000" />
    <testcase classname="compress/flate" name="TestDeflateInflateString" time="0.000000" />
    <testcase classname="compress/flate" name="TestReaderDict" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriterDict" time="0.000000" />
    <testcase classname="compress/flate" name="TestRegression2508" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriterReset" time="0.000000" />
    <testcase classname="compress/flate" name="TestBestSpeed" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriterPersistentWriteError" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriterPersistentFlushError" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriterPersistentCloseError" time="0.000000" />
    <testcase classname="compress/flate" name="TestBestSpeedMatch" time="0.000000" />
    <testcase classname="compress/flate" name="TestBestSpeedMaxMatchOffset" time="0.000000" />
    <testcase classname="compress/flate" name="TestBestSpeedShiftOffsets" time="0.000000" />
    <testcase classname="compress/flate" name="TestMaxStackSize" time="0.000000" />
    <testcase classname="compress/flate" name="TestDictDecoder" time="0.000000" />
    <testcase classname="compress/flate" name="TestIssue5915" time="0.000000" />
    <testcase classname="compress/flate" name="TestIssue5962" time="0.000000" />
    <testcase classname="compress/flate" name="TestIssue6255" time="0.000000" />
    <testcase classname="compress/flate" name="TestInvalidEncoding" time="0.000000" />
    <testcase classname="compress/flate" name="TestInvalidBits" time="0.000000" />
    <testcase classname="compress/flate" name="TestStreams" time="0.000000" />
    <testcase classname="compress/flate" name="TestTruncatedStreams" time="0.000000" />
    <testcase classname="compress/flate" name="TestReaderEarlyEOF" time="0.000000" />
    <testcase classname="compress/flate" name="TestBlockHuff" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriteBlock" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriteBlockDynamic" time="0.000000" />
    <testcase classname="compress/flate" name="TestReset" time="0.000000" />
    <testcase classname="compress/flate" name="TestReaderTruncated" time="0.000000" />
    <testcase classname="compress/flate" name="TestResetDict" time="0.000000" />
    <testcase classname="compress/flate" name="TestReaderReusesReaderBuffer" time="0.000000" />
    <testcase classname="compress/flate" name="TestNlitOutOfRange" time="0.000000" />
    <testcase classname="compress/flate" name="TestWriteError" time="0.000000" />
    <testcase classname="compress/flate" name="TestDeterministic" time="0.000000" />
    <testcase classname="compress/flate" name="TestDeflateFast_Reset" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="compress/gzip" timestamp="2024-04-26T04:42:07Z">
    <properties classname="compress/gzip">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="17" failures="0" time="0.000000" name="compress/lzw" timestamp="2024-04-26T04:42:10Z">
    <properties classname="compress/lzw">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="compress/lzw" name="TestReader" time="0.000000" />
    <testcase classname="compress/lzw" name="TestReaderReset" time="0.000000" />
    <testcase classname="compress/lzw" name="TestHiCodeDoesNotOverflow" time="0.000000" />
    <testcase classname="compress/lzw" name="TestNoLongerSavingPriorExpansions" time="0.000000" />
    <testcase classname="compress/lzw" name="TestWriter" time="0.000000" />
    <testcase classname="compress/lzw" name="TestWriterReset" time="0.000000" />
    <testcase classname="compress/lzw" name="TestWriterReturnValues" time="0.000000" />
    <testcase classname="compress/lzw" name="TestSmallLitWidth" time="0.000000" />
    <testcase classname="compress/lzw" name="TestStartsWithClearCode" time="0.000000" />
  </testsuite>
  <testsuite tests="6" failures="0" time="0.000000" name="compress/zlib" timestamp="2024-04-26T04:42:12Z">
    <properties classname="compress/zlib">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="compress/zlib" name="TestDecompressor" time="0.000000" />
    <testcase classname="compress/zlib" name="TestWriter" time="0.000000" />
    <testcase classname="compress/zlib" name="TestWriterBig" time="0.000000" />
    <testcase classname="compress/zlib" name="TestWriterDict" time="0.000000" />
    <testcase classname="compress/zlib" name="TestWriterReset" time="0.000000" />
    <testcase classname="compress/zlib" name="TestWriterDictIsUsed" time="0.000000" />
  </testsuite>
  <testsuite tests="7" failures="0" time="0.000000" name="container/heap" timestamp="2024-04-26T04:42:12Z">
    <properties classname="container/heap">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="container/heap" name="TestInit0" time="0.000000" />
    <testcase classname="container/heap" name="TestInit1" time="0.000000" />
    <testcase classname="container/heap" name="Test" time="0.000000" />
    <testcase classname="container/heap" name="TestRemove0" time="0.000000" />
    <testcase classname="container/heap" name="TestRemove1" time="0.000000" />
    <testcase classname="container/heap" name="TestRemove2" time="0.000000" />
    <testcase classname="container/heap" name="TestFix" time="0.000000" />
  </testsuite>
  <testsuite tests="10" failures="0" time="0.000000" name="container/list" timestamp="2024-04-26T04:42:13Z">
    <properties classname="container/list">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="container/list" name="TestList" time="0.000000" />
    <testcase classname="container/list" name="TestExtending" time="0.000000" />
    <testcase classname="container/list" name="TestRemove" time="0.000000" />
    <testcase classname="container/list" name="TestIssue4103" time="0.000000" />
    <testcase classname="container/list" name="TestIssue6349" time="0.000000" />
    <testcase classname="container/list" name="TestMove" time="0.000000" />
    <testcase classname="container/list" name="TestZeroList" time="0.000000" />
    <testcase classname="container/list" name="TestInsertBeforeUnknownMark" time="0.000000" />
    <testcase classname="container/list" name="TestInsertAfterUnknownMark" time="0.000000" />
    <testcase classname="container/list" name="TestMoveUnknownMark" time="0.000000" />
  </testsuite>
  <testsuite tests="8" failures="0" time="0.000000" name="container/ring" timestamp="2024-04-26T04:42:16Z">
    <properties classname="container/ring">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="container/ring" name="TestCornerCases" time="0.000000" />
    <testcase classname="container/ring" name="TestNew" time="0.000000" />
    <testcase classname="container/ring" name="TestLink1" time="0.000000" />
    <testcase classname="container/ring" name="TestLink2" time="0.000000" />
    <testcase classname="container/ring" name="TestLink3" time="0.000000" />
    <testcase classname="container/ring" name="TestUnlink" time="0.000000" />
    <testcase classname="container/ring" name="TestLinkUnlink" time="0.000000" />
    <testcase classname="container/ring" name="TestMoveEmptyRing" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="context" timestamp="2024-04-26T04:42:17Z">
    <properties classname="context">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="context" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	context	0.000s
# context_test
/usr/local/go/src/context/x_test.go:21:27: cannot use t (variable of type *testing.T) as context.testingT value in argument to XTestParentFinishesChild: *testing.T does not implement context.testingT (missing method Deadline)
/usr/local/go/src/context/x_test.go:24:26: cannot use t (variable of type *testing.T) as context.testingT value in argument to XTestChildFinishesFirst: *testing.T does not implement context.testingT (missing method Deadline)
/usr/local/go/src/context/x_test.go:27:21: cannot use t (variable of type *testing.T) as context.testingT value in argument to XTestCancelRemoves: *testing.T does not implement context.testingT (missing method Deadline)
/usr/local/go/src/context/x_test.go:30:31: cannot use t (variable of type *testing.T) as context.testingT value in argument to XTestCustomContextGoroutines: *testing.T does not implement context.testingT (missing method Deadline)
/usr/local/go/src/context/x_test.go:50:20: t.Deadline undefined (type *testing.T has no field or method Deadline)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto" timestamp="2024-04-26T04:42:19Z">
    <properties classname="crypto">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo3308389968/main /tmp/tinygo3308389968/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/aes.encryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:81 (/usr/local/go/src/crypto/aes/cipher_asm.go:81)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-DF7B1E694F38017C37BF13447BDBB61BE010030F:((*crypto/aes.aesCipherAsm).Encrypt)
failed to run tool: ld.lld
FAIL	crypto	0.000s
error: failed to link /tmp/tinygo3308389968/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/aes" timestamp="2024-04-26T04:42:19Z">
    <properties classname="crypto/aes">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/aes" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo518708260/main /tmp/tinygo518708260/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/aes.decryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:95 (/usr/local/go/src/crypto/aes/cipher_asm.go:95)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8D35EAAFAECF0CB6D4C9C8D0DE17A7DA33F48ADB:((*crypto/aes.aesCipherAsm).Decrypt)

ld.lld: error: undefined symbol: crypto/aes.encryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:81 (/usr/local/go/src/crypto/aes/cipher_asm.go:81)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8D35EAAFAECF0CB6D4C9C8D0DE17A7DA33F48ADB:((*crypto/aes.aesCipherAsm).Encrypt)
failed to run tool: ld.lld
FAIL	crypto/aes	0.000s
error: failed to link /tmp/tinygo518708260/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/cipher" timestamp="2024-04-26T04:42:20Z">
    <properties classname="crypto/cipher">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/cipher" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo3039831582/main /tmp/tinygo3039831582/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/aes.gcmAesInit
&gt;&gt;&gt; referenced by aes_gcm.go:49 (/usr/local/go/src/crypto/aes/aes_gcm.go:49)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(crypto/cipher.newGCMWithNonceAndTagSize)

ld.lld: error: undefined symbol: crypto/aes.decryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:95 (/usr/local/go/src/crypto/aes/cipher_asm.go:95)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:((*crypto/aes.aesCipherAsm).Decrypt)

ld.lld: error: undefined symbol: crypto/aes.encryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:81 (/usr/local/go/src/crypto/aes/cipher_asm.go:81)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:((*crypto/aes.aesCipherAsm).Encrypt)
&gt;&gt;&gt; referenced by aes_gcm.go:111 (/usr/local/go/src/crypto/aes/aes_gcm.go:111)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Seal$invoke)
&gt;&gt;&gt; referenced by aes_gcm.go:164 (/usr/local/go/src/crypto/aes/aes_gcm.go:164)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Open$invoke)

ld.lld: error: undefined symbol: crypto/aes.gcmAesData
&gt;&gt;&gt; referenced by aes_gcm.go:107 (/usr/local/go/src/crypto/aes/aes_gcm.go:107)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Seal$invoke)
&gt;&gt;&gt; referenced by aes_gcm.go:114 (/usr/local/go/src/crypto/aes/aes_gcm.go:114)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Seal$invoke)
&gt;&gt;&gt; referenced by aes_gcm.go:160 (/usr/local/go/src/crypto/aes/aes_gcm.go:160)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Open$invoke)
&gt;&gt;&gt; referenced 1 more times

ld.lld: error: undefined symbol: crypto/aes.gcmAesFinish
&gt;&gt;&gt; referenced by aes_gcm.go:108 (/usr/local/go/src/crypto/aes/aes_gcm.go:108)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Seal$invoke)
&gt;&gt;&gt; referenced by aes_gcm.go:123 (/usr/local/go/src/crypto/aes/aes_gcm.go:123)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Seal$invoke)
&gt;&gt;&gt; referenced by aes_gcm.go:161 (/usr/local/go/src/crypto/aes/aes_gcm.go:161)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Open$invoke)
&gt;&gt;&gt; referenced 1 more times

ld.lld: error: undefined symbol: crypto/aes.gcmAesEnc
&gt;&gt;&gt; referenced by aes_gcm.go:121 (/usr/local/go/src/crypto/aes/aes_gcm.go:121)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Seal$invoke)

ld.lld: error: undefined symbol: crypto/aes.gcmAesDec
&gt;&gt;&gt; referenced by aes_gcm.go:174 (/usr/local/go/src/crypto/aes/aes_gcm.go:174)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-B2C24388ED20E82D4A1FDF2B51982A53F2729CC5:(interface:{NonceSize:func:{}{basic:int},Open:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8,named:error},Overhead:func:{}{basic:int},Seal:func:{slice:basic:uint8,slice:basic:uint8,slice:basic:uint8,slice:basic:uint8}{slice:basic:uint8}}.Open$invoke)
failed to run tool: ld.lld
FAIL	crypto/cipher	0.000s
error: failed to link /tmp/tinygo3039831582/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="18" failures="0" time="0.000000" name="crypto/des" timestamp="2024-04-26T04:42:23Z">
    <properties classname="crypto/des">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/des" name="TestInitialPermute" time="0.000000" />
    <testcase classname="crypto/des" name="TestFinalPermute" time="0.000000" />
    <testcase classname="crypto/des" name="TestWeakKeys" time="0.000000" />
    <testcase classname="crypto/des" name="TestSemiWeakKeyPairs" time="0.000000" />
    <testcase classname="crypto/des" name="TestDESEncryptBlock" time="0.000000" />
    <testcase classname="crypto/des" name="TestDESDecryptBlock" time="0.000000" />
    <testcase classname="crypto/des" name="TestEncryptTripleDES" time="0.000000" />
    <testcase classname="crypto/des" name="TestDecryptTripleDES" time="0.000000" />
    <testcase classname="crypto/des" name="TestVariablePlaintextKnownAnswer" time="0.000000" />
    <testcase classname="crypto/des" name="TestVariableCiphertextKnownAnswer" time="0.000000" />
    <testcase classname="crypto/des" name="TestInversePermutationKnownAnswer" time="0.000000" />
    <testcase classname="crypto/des" name="TestInitialPermutationKnownAnswer" time="0.000000" />
    <testcase classname="crypto/des" name="TestVariableKeyKnownAnswerEncrypt" time="0.000000" />
    <testcase classname="crypto/des" name="TestVariableKeyKnownAnswerDecrypt" time="0.000000" />
    <testcase classname="crypto/des" name="TestPermutationOperationKnownAnswerEncrypt" time="0.000000" />
    <testcase classname="crypto/des" name="TestPermutationOperationKnownAnswerDecrypt" time="0.000000" />
    <testcase classname="crypto/des" name="TestSubstitutionTableKnownAnswerEncrypt" time="0.000000" />
    <testcase classname="crypto/des" name="TestSubstitutionTableKnownAnswerDecrypt" time="0.000000" />
  </testsuite>
  <testsuite tests="4" failures="0" time="0.000000" name="crypto/dsa" timestamp="2024-04-26T04:42:23Z">
    <properties classname="crypto/dsa">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/dsa" name="TestParameterGeneration" time="0.000000" />
    <testcase classname="crypto/dsa" name="TestSignAndVerify" time="0.000000" />
    <testcase classname="crypto/dsa" name="TestSignAndVerifyWithBadPublicKey" time="0.000000" />
    <testcase classname="crypto/dsa" name="TestSigningWithDegenerateKeys" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/ecdh" timestamp="2024-04-26T04:42:25Z">
    <properties classname="crypto/ecdh">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/ecdh" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo2293093185/main /tmp/tinygo2293093185/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a /tmp/tinygo2293093185/embed-a3a5d08c40939adb7c0e9e4f5b689721-823525410.o -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/internal/nistec.p256Sqr
&gt;&gt;&gt; referenced by p256_asm.go:584 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:584)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced by p256_asm.go:586 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:586)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced by p256_asm.go:588 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:588)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced 16 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Mul
&gt;&gt;&gt; referenced by p256_asm.go:603 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:603)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced by p256_asm.go:141 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:141)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(crypto/internal/nistec.p256Polynomial)
&gt;&gt;&gt; referenced by p256_asm.go:489 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:489)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)
&gt;&gt;&gt; referenced 8 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256BigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:95 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:95)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(OUTLINED_FUNCTION_764)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256FromMont
&gt;&gt;&gt; referenced by p256_asm.go:125 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:125)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by p256_asm.go:516 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:516)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:494 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:494)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)
&gt;&gt;&gt; referenced 1 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256NegCond
&gt;&gt;&gt; referenced by p256_asm.go:127 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:127)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by p256_asm.go:146 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:146)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(crypto/internal/nistec.p256Polynomial)
&gt;&gt;&gt; referenced by p256_asm.go:723 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:723)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced 2 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointDoubleAsm
&gt;&gt;&gt; referenced by p256_asm.go:660 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:660)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:661 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:661)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:662 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:662)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced 7 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAsm
&gt;&gt;&gt; referenced by p256_asm.go:669 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:669)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:681 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:681)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:691 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:691)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced 2 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Select
&gt;&gt;&gt; referenced by p256_asm.go:703 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:703)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:722 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:722)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:739 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:739)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256MovCond
&gt;&gt;&gt; referenced by p256_asm.go:725 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:725)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:742 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:742)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:648 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:648)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)
&gt;&gt;&gt; referenced 1 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256LittleToBig
&gt;&gt;&gt; referenced by p256_asm.go:517 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:517)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).ECDH)
&gt;&gt;&gt; referenced by p256_asm.go:478 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:478)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)
&gt;&gt;&gt; referenced by p256_asm.go:479 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:479)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256SelectAffine
&gt;&gt;&gt; referenced by p256_asm.go:627 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:627)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)
&gt;&gt;&gt; referenced by p256_asm.go:642 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:642)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAffineAsm
&gt;&gt;&gt; referenced by p256_asm.go:643 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:643)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:((*crypto/ecdh.PrivateKey).PublicKey$1)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdBigToLittle
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-5A74BC6C5DE36B0781C2ADFD7B7047B1357A9BAB:(OUTLINED_FUNCTION_784)
failed to run tool: ld.lld
FAIL	crypto/ecdh	0.000s
error: failed to link /tmp/tinygo2293093185/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/ecdsa" timestamp="2024-04-26T04:42:25Z">
    <properties classname="crypto/ecdsa">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/ecdsa" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo3597089057/main /tmp/tinygo3597089057/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a /tmp/tinygo3597089057/embed-a3a5d08c40939adb7c0e9e4f5b689721-2247943259.o -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/aes.encryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:81 (/usr/local/go/src/crypto/aes/cipher_asm.go:81)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/aes.aesCipherAsm).Encrypt)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAsm
&gt;&gt;&gt; referenced by p256_asm.go:387 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:387)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:669 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:669)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:681 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:681)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced 3 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointDoubleAsm
&gt;&gt;&gt; referenced by p256_asm.go:388 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:388)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:660 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:660)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:661 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:661)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced 8 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256MovCond
&gt;&gt;&gt; referenced by p256_asm.go:389 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:389)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:390 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:390)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:391 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:391)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced 4 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Mul
&gt;&gt;&gt; referenced by p256_asm.go:489 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:489)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Bytes)
&gt;&gt;&gt; referenced by p256_asm.go:603 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:603)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(OUTLINED_FUNCTION_189)
&gt;&gt;&gt; referenced 5 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256FromMont
&gt;&gt;&gt; referenced by p256_asm.go:495 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:495)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Bytes)
&gt;&gt;&gt; referenced by p256_asm.go:125 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:125)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(OUTLINED_FUNCTION_1215)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256LittleToBig
&gt;&gt;&gt; referenced by p256_asm.go:478 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:478)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Bytes)
&gt;&gt;&gt; referenced by p256_asm.go:479 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:479)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).Bytes)
&gt;&gt;&gt; referenced by p256_asm.go:517 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:517)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).BytesX)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Sqr
&gt;&gt;&gt; referenced by p256_asm.go:584 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:584)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced by p256_asm.go:586 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:586)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced by p256_asm.go:588 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:588)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.p256Inverse)
&gt;&gt;&gt; referenced 16 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdBigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:410 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:410)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarBaseMult)
&gt;&gt;&gt; referenced by p256_asm.go:425 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:425)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_ordinv.go:27 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:27)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256SelectAffine
&gt;&gt;&gt; referenced by p256_asm.go:627 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:627)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarBaseMult)
&gt;&gt;&gt; referenced by p256_asm.go:642 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:642)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarBaseMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256NegCond
&gt;&gt;&gt; referenced by p256_asm.go:629 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:629)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarBaseMult)
&gt;&gt;&gt; referenced by p256_asm.go:723 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:723)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:740 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:740)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced 2 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAffineAsm
&gt;&gt;&gt; referenced by p256_asm.go:643 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:643)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarBaseMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Select
&gt;&gt;&gt; referenced by p256_asm.go:703 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:703)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:722 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:722)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:739 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:739)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).ScalarMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256BigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:95 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:95)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(OUTLINED_FUNCTION_1291)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdMul
&gt;&gt;&gt; referenced by p256_ordinv.go:51 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:51)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
&gt;&gt;&gt; referenced by p256_ordinv.go:53 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:53)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
&gt;&gt;&gt; referenced by p256_ordinv.go:54 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:54)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
&gt;&gt;&gt; referenced 7 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdSqr
&gt;&gt;&gt; referenced by p256_ordinv.go:64 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:64)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
&gt;&gt;&gt; referenced by p256_ordinv.go:66 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:66)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
&gt;&gt;&gt; referenced by p256_ordinv.go:68 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:68)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
&gt;&gt;&gt; referenced 4 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdLittleToBig
&gt;&gt;&gt; referenced by p256_ordinv.go:100 (/usr/local/go/src/crypto/internal/nistec/p256_ordinv.go:100)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-C89B393798C9A5509BF6492389FB2156FA046854:(crypto/internal/nistec.P256OrdInverse)
failed to run tool: ld.lld
FAIL	crypto/ecdsa	0.000s
error: failed to link /tmp/tinygo3597089057/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="9" failures="1" time="0.000000" name="crypto/ed25519" timestamp="2024-04-26T04:42:26Z">
    <properties classname="crypto/ed25519">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/ed25519" name="TestEd25519Vectors" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestEd25519Vectors
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    platform cannot run go tool
    FailNow is incomplete, requires runtime.Goexit()
    failed to run `go mod download -json filippo.io/mostly-harmless/ed25519vectors@v0.0.0-20210322192420-30a2d7243a94`, output: 
    FailNow is incomplete, requires runtime.Goexit()
    unexpected end of JSON input
    FailNow is incomplete, requires runtime.Goexit()
    failed to read ed25519vectors.json: open ed25519vectors.json: file does not exist
    FailNow is incomplete, requires runtime.Goexit()
    unexpected end of JSON input
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestEd25519Vectors (0.01s)
</failure>
    </testcase>
    <testcase classname="crypto/ed25519" name="TestSignVerify" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestSignVerifyHashed" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestSignVerifyContext" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestCryptoSigner" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestEqual" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestGolden" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestMalleability" time="0.000000" />
    <testcase classname="crypto/ed25519" name="TestAllocations" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/elliptic" timestamp="2024-04-26T04:42:30Z">
    <properties classname="crypto/elliptic">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/elliptic" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo2367157109/main /tmp/tinygo2367157109/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a /tmp/tinygo2367157109/embed-a3a5d08c40939adb7c0e9e4f5b689721-286954641.o -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAsm
&gt;&gt;&gt; referenced by p256_asm.go:387 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:387)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:669 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:669)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:681 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:681)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced 3 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointDoubleAsm
&gt;&gt;&gt; referenced by p256_asm.go:388 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:388)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:660 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:660)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:661 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:661)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced 9 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256MovCond
&gt;&gt;&gt; referenced by p256_asm.go:389 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:389)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:390 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:390)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced by p256_asm.go:391 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:391)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).Add)
&gt;&gt;&gt; referenced 4 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdBigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:410 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:410)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarBaseMult)
&gt;&gt;&gt; referenced by p256_asm.go:425 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:425)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256SelectAffine
&gt;&gt;&gt; referenced by p256_asm.go:627 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:627)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarBaseMult)
&gt;&gt;&gt; referenced by p256_asm.go:642 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:642)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarBaseMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256NegCond
&gt;&gt;&gt; referenced by p256_asm.go:629 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:629)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarBaseMult)
&gt;&gt;&gt; referenced by p256_asm.go:723 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:723)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:740 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:740)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced 2 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAffineAsm
&gt;&gt;&gt; referenced by p256_asm.go:643 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:643)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarBaseMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Select
&gt;&gt;&gt; referenced by p256_asm.go:703 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:703)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:722 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:722)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)
&gt;&gt;&gt; referenced by p256_asm.go:739 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:739)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).ScalarMult)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256BigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:95 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:95)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:(OUTLINED_FUNCTION_830)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Sqr
&gt;&gt;&gt; referenced by p256_asm.go:162 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:162)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by p256_asm.go:230 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:230)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by p256_asm.go:232 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:232)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced 16 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256FromMont
&gt;&gt;&gt; referenced by p256_asm.go:125 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:125)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/internal/nistec.P256Point).SetBytes)
&gt;&gt;&gt; referenced by p256_asm.go:494 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:494)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:495 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:495)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Mul
&gt;&gt;&gt; referenced by p256_asm.go:141 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:141)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:(crypto/internal/nistec.p256Polynomial)
&gt;&gt;&gt; referenced by p256_asm.go:603 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:603)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:492 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:492)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced 7 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256LittleToBig
&gt;&gt;&gt; referenced by p256_asm.go:478 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:478)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:479 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:479)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-8FA5BE76747A57968C9E4E31DF22FA93459ACB02:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
failed to run tool: ld.lld
FAIL	crypto/elliptic	0.000s
error: failed to link /tmp/tinygo2367157109/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="4" failures="0" time="0.000000" name="crypto/hmac" timestamp="2024-04-26T04:42:30Z">
    <properties classname="crypto/hmac">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/hmac" name="TestHMAC" time="0.000000" />
    <testcase classname="crypto/hmac" name="TestNonUniqueHash" time="0.000000" />
    <testcase classname="crypto/hmac" name="TestEqual" time="0.000000" />
    <testcase classname="crypto/hmac" name="TestWriteAfterSum" time="0.000000" />
  </testsuite>
  <testsuite tests="6" failures="0" time="0.000000" name="crypto/md5" timestamp="2024-04-26T04:42:33Z">
    <properties classname="crypto/md5">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/md5" name="TestGolden" time="0.000000" />
    <testcase classname="crypto/md5" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="crypto/md5" name="TestLarge" time="0.000000" />
    <testcase classname="crypto/md5" name="TestBlockGeneric" time="0.000000" />
    <testcase classname="crypto/md5" name="TestLargeHashes" time="0.000000" />
    <testcase classname="crypto/md5" name="TestAllocations" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/rand" timestamp="2024-04-26T04:42:34Z">
    <properties classname="crypto/rand">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="2" failures="0" time="0.000000" name="crypto/rc4" timestamp="2024-04-26T04:42:35Z">
    <properties classname="crypto/rc4">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/rc4" name="TestGolden" time="0.000000" />
    <testcase classname="crypto/rc4" name="TestBlock" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/rsa" timestamp="2024-04-26T04:42:42Z">
    <properties classname="crypto/rsa">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/rsa" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo1744163691/main /tmp/tinygo1744163691/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a /tmp/tinygo1744163691/embed-a3a5d08c40939adb7c0e9e4f5b689721-382641251.o -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: crypto/aes.encryptBlockAsm
&gt;&gt;&gt; referenced by cipher_asm.go:81 (/usr/local/go/src/crypto/aes/cipher_asm.go:81)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/aes.aesCipherAsm).Encrypt)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Sqr
&gt;&gt;&gt; referenced by p256_asm.go:140 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:140)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:(crypto/internal/nistec.p256Polynomial)
&gt;&gt;&gt; referenced by p256_asm.go:162 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:162)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointFromAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:230 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:230)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointFromAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced 16 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Mul
&gt;&gt;&gt; referenced by p256_asm.go:141 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:141)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:(crypto/internal/nistec.p256Polynomial)
&gt;&gt;&gt; referenced by p256_asm.go:492 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:492)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:(OUTLINED_FUNCTION_272)
&gt;&gt;&gt; referenced 6 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256NegCond
&gt;&gt;&gt; referenced by p256_asm.go:146 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:146)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:(crypto/internal/nistec.p256Polynomial)
&gt;&gt;&gt; referenced by p256_asm.go:629 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:629)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:723 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:723)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced 2 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256OrdBigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:410 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:410)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:425 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:425)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])

ld.lld: error: undefined symbol: crypto/internal/nistec.p256SelectAffine
&gt;&gt;&gt; referenced by p256_asm.go:627 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:627)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:642 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:642)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point])

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAffineAsm
&gt;&gt;&gt; referenced by p256_asm.go:643 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:643)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point])

ld.lld: error: undefined symbol: crypto/internal/nistec.p256MovCond
&gt;&gt;&gt; referenced by p256_asm.go:648 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:648)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarBaseMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:725 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:725)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:742 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:742)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced 1 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointDoubleAsm
&gt;&gt;&gt; referenced by p256_asm.go:660 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:660)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:661 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:661)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:662 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:662)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced 7 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256PointAddAsm
&gt;&gt;&gt; referenced by p256_asm.go:669 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:669)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:681 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:681)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:691 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:691)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced 2 more times

ld.lld: error: undefined symbol: crypto/internal/nistec.p256Select
&gt;&gt;&gt; referenced by p256_asm.go:703 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:703)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:722 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:722)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:739 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:739)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).ScalarMult[*crypto/internal/nistec.P256Point])

ld.lld: error: undefined symbol: crypto/internal/nistec.p256BigToLittle
&gt;&gt;&gt; referenced by p256_asm.go:95 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:95)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointFromAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by main
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:(OUTLINED_FUNCTION_1226)

ld.lld: error: undefined symbol: crypto/internal/nistec.p256FromMont
&gt;&gt;&gt; referenced by p256_asm.go:125 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:125)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointFromAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:494 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:494)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:495 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:495)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])

ld.lld: error: undefined symbol: crypto/internal/nistec.p256LittleToBig
&gt;&gt;&gt; referenced by p256_asm.go:478 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:478)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
&gt;&gt;&gt; referenced by p256_asm.go:479 (/usr/local/go/src/crypto/internal/nistec/p256_asm.go:479)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-3CAACE6A17DC4091A96BFDC99FCCCEC348AFF369:((*crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point]).pointToAffine[*crypto/internal/nistec.P256Point])
failed to run tool: ld.lld
FAIL	crypto/rsa	0.000s
error: failed to link /tmp/tinygo1744163691/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="7" failures="0" time="0.000000" name="crypto/sha1" timestamp="2024-04-26T04:42:42Z">
    <properties classname="crypto/sha1">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/sha1" name="TestGolden" time="0.000000" />
    <testcase classname="crypto/sha1" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="crypto/sha1" name="TestSize" time="0.000000" />
    <testcase classname="crypto/sha1" name="TestBlockSize" time="0.000000" />
    <testcase classname="crypto/sha1" name="TestBlockGeneric" time="0.000000" />
    <testcase classname="crypto/sha1" name="TestLargeHashes" time="0.000000" />
    <testcase classname="crypto/sha1" name="TestAllocations" time="0.000000" />
  </testsuite>
  <testsuite tests="11" failures="0" time="0.000000" name="crypto/sha256" timestamp="2024-04-26T04:42:43Z">
    <properties classname="crypto/sha256">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/sha256" name="TestGolden" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestMarshalTypeMismatch" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestSize" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestBlockSize" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestBlockGeneric" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestLargeHashes" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestAllocations" time="0.000000" />
    <testcase classname="crypto/sha256" name="TestCgo" time="0.000000" />
  </testsuite>
  <testsuite tests="12" failures="0" time="0.000000" name="crypto/sha512" timestamp="2024-04-26T04:42:44Z">
    <properties classname="crypto/sha512">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/sha512" name="TestGolden" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestMarshalMismatch" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestSize" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestBlockSize" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestBlockGeneric" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestLargeHashes" time="0.000000" />
    <testcase classname="crypto/sha512" name="TestAllocations" time="0.000000" />
  </testsuite>
  <testsuite tests="2" failures="1" time="0.000000" name="crypto/subtle" timestamp="2024-04-26T04:42:45Z">
    <properties classname="crypto/subtle">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/subtle" name="TestConstantTimeByteEq" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestConstantTimeByteEq
panic: unimplemented: (reflect.Type).NumIn()
</failure>
    </testcase>
    <testcase classname="crypto/subtle" name="TestConstantTimeCompare" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/tls" timestamp="2024-04-26T04:42:45Z">
    <properties classname="crypto/tls">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/x509" timestamp="2024-04-26T04:42:45Z">
    <properties classname="crypto/x509">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="crypto/x509" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	crypto/x509	0.000s
# crypto/x509_test
/usr/local/go/src/crypto/x509/hybrid_pool_test.go:63:17: c.ConnectionState undefined (type *net.TLSConn has no field or method ConnectionState)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="crypto/x509/pkix" timestamp="2024-04-26T04:42:46Z">
    <properties classname="crypto/x509/pkix">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="database/sql" timestamp="2024-04-26T04:42:47Z">
    <properties classname="database/sql">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="database/sql" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	database/sql	0.000s
# database/sql
/usr/local/go/src/database/sql/sql_test.go:4722:4: b.SetParallelism undefined (type *testing.B has no field or method SetParallelism)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="0" time="0.000000" name="database/sql/driver" timestamp="2024-04-26T04:42:47Z">
    <properties classname="database/sql/driver">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="database/sql/driver" name="TestValueConverters" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="debug/buildinfo" timestamp="2024-04-26T04:42:49Z">
    <properties classname="debug/buildinfo">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/buildinfo" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	debug/buildinfo	0.000s
# debug/buildinfo
/usr/local/go/src/debug/buildinfo/buildinfo.go:80:19: undefined: debug.ParseBuildInfo
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="40" failures="0" time="0.000000" name="debug/dwarf" timestamp="2024-04-26T04:42:50Z">
    <properties classname="debug/dwarf">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/dwarf" name="TestDwarf5Ranges" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestSplit" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestReaderSeek" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestRangesSection" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestRangesRnglistx" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestReaderRanges" time="0.000000" />
    <testcase classname="debug/dwarf" name="Test64Bit" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestUnitIteration" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestIssue51758" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestIssue52045" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestLineELFGCC" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestLineELFGCCZstd" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestLineGCCWindows" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestLineELFClang" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestLineRnglists" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestLineSeek" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestPathJoin" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestPathLineReaderMalformed" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestTypedefsELF" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestTypedefsMachO" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestTypedefsELFDwarf4" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestTypedefCycle" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestUnsupportedTypes" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestBitOffsetsELF" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestBitOffsetsMachO" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestBitOffsetsMachO4" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestBitOffsetsELFDwarf4" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestBitOffsetsELFDwarf5" time="0.000000" />
    <testcase classname="debug/dwarf" name="TestBitFieldZeroArrayIssue50685" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="debug/elf" timestamp="2024-04-26T04:42:52Z">
    <properties classname="debug/elf">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/elf" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	debug/elf	0.000s
# debug/elf
/usr/local/go/src/debug/elf/file_test.go:1159:10: undefined: net.ResolveIPAddr
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="1" failures="1" time="0.000000" name="debug/gosym" timestamp="2024-04-26T04:42:52Z">
    <properties classname="debug/gosym">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/gosym" name="TestLineFromAline" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestLineFromAline
    no .gosymtab section
    SkipNow is incomplete, requires runtime.Goexit()
panic: runtime error at 0x000000000025e144: nil pointer dereference
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="7" failures="0" time="0.000000" name="debug/macho" timestamp="2024-04-26T04:42:53Z">
    <properties classname="debug/macho">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/macho" name="TestOpen" time="0.000000" />
    <testcase classname="debug/macho" name="TestOpenFailure" time="0.000000" />
    <testcase classname="debug/macho" name="TestOpenFat" time="0.000000" />
    <testcase classname="debug/macho" name="TestOpenFatFailure" time="0.000000" />
    <testcase classname="debug/macho" name="TestRelocTypeString" time="0.000000" />
    <testcase classname="debug/macho" name="TestTypeString" time="0.000000" />
    <testcase classname="debug/macho" name="TestOpenBadDysymCmd" time="0.000000" />
  </testsuite>
  <testsuite tests="1" failures="1" time="0.000000" name="debug/pe" timestamp="2024-04-26T04:42:53Z">
    <properties classname="debug/pe">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/pe" name="TestDefaultLinkerDWARF" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultLinkerDWARF
    skipping windows only test
    SkipNow is incomplete, requires runtime.Goexit()
    skipping test: 'go run' not available on linux/arm64
    SkipNow is incomplete, requires runtime.Goexit()
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    platform cannot run go tool
    FailNow is incomplete, requires runtime.Goexit()
    building test executable for linktype 1 failed: exec: no command 
    FailNow is incomplete, requires runtime.Goexit()
    running test executable failed: fork/exec /tmp/TestDefaultLinkerDWARF71883266/000/a.exe: operation not implemented 
    FailNow is incomplete, requires runtime.Goexit()
    Testprog output:
    unexpected program output: 
    FailNow is incomplete, requires runtime.Goexit()
panic: runtime error at 0x00000000002740a4: index out of range
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="2" failures="0" time="0.000000" name="debug/plan9obj" timestamp="2024-04-26T04:42:53Z">
    <properties classname="debug/plan9obj">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="debug/plan9obj" name="TestOpen" time="0.000000" />
    <testcase classname="debug/plan9obj" name="TestOpenFailure" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="embed" timestamp="2024-04-26T04:42:56Z">
    <properties classname="embed">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="encoding" timestamp="2024-04-26T04:42:56Z">
    <properties classname="encoding">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="9" failures="0" time="0.000000" name="encoding/ascii85" timestamp="2024-04-26T04:42:57Z">
    <properties classname="encoding/ascii85">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/ascii85" name="TestEncode" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestEncoder" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestEncoderBuffering" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestDecode" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestDecoder" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestDecoderBuffering" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestDecodeCorrupt" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestBig" time="0.000000" />
    <testcase classname="encoding/ascii85" name="TestDecoderInternalWhitespace" time="0.000000" />
  </testsuite>
  <testsuite tests="38" failures="0" time="0.000000" name="encoding/asn1" timestamp="2024-04-26T04:43:00Z">
    <properties classname="encoding/asn1">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/asn1" name="TestParseBool" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestParseInt64" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestParseInt32" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestParseBigInt" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestBitString" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestBitStringAt" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestBitStringRightAlign" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestObjectIdentifier" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestUTCTime" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestGeneralizedTime" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestParseTagAndLength" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestParseFieldParameters" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestUnmarshal" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestUnmarshalWithNilOrNonPointer" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestCertificate" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestCertificateWithNUL" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestRawStructs" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestObjectIdentifierEqual" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestStringSlice" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestExplicitTaggedTime" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestImplicitTaggedTime" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestTruncatedExplicitTag" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestUnmarshalInvalidUTF8" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestMarshalNilValue" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestUnexportedStructField" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestNull" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestExplicitTagRawValueStruct" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestTaggedRawValue" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestBMPString" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestNonMinimalEncodedOID" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestMarshal" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestMarshalWithParams" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestMarshalError" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestInvalidUTF8" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestMarshalOID" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestIssue11130" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestSetEncoder" time="0.000000" />
    <testcase classname="encoding/asn1" name="TestSetEncoderSETSliceSuffix" time="0.000000" />
  </testsuite>
  <testsuite tests="24" failures="0" time="0.000000" name="encoding/base32" timestamp="2024-04-26T04:43:03Z">
    <properties classname="encoding/base32">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/base32" name="TestEncode" time="0.000000" />
    <testcase classname="encoding/base32" name="TestEncoder" time="0.000000" />
    <testcase classname="encoding/base32" name="TestEncoderBuffering" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecode" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecoder" time="0.000000" />
    <testcase classname="encoding/base32" name="TestIssue20044" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecoderError" time="0.000000" />
    <testcase classname="encoding/base32" name="TestReaderEOF" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecoderBuffering" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecodeCorrupt" time="0.000000" />
    <testcase classname="encoding/base32" name="TestBig" time="0.000000" />
    <testcase classname="encoding/base32" name="TestNewLineCharacters" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecoderIssue4779" time="0.000000" />
    <testcase classname="encoding/base32" name="TestWithCustomPadding" time="0.000000" />
    <testcase classname="encoding/base32" name="TestWithoutPadding" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecodeWithPadding" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecodeWithWrongPadding" time="0.000000" />
    <testcase classname="encoding/base32" name="TestBufferedDecodingSameError" time="0.000000" />
    <testcase classname="encoding/base32" name="TestBufferedDecodingPadding" time="0.000000" />
    <testcase classname="encoding/base32" name="TestEncodedLen" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecodedLen" time="0.000000" />
    <testcase classname="encoding/base32" name="TestWithoutPaddingClose" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecodeReadAll" time="0.000000" />
    <testcase classname="encoding/base32" name="TestDecodeSmallBuffer" time="0.000000" />
  </testsuite>
  <testsuite tests="17" failures="0" time="0.000000" name="encoding/base64" timestamp="2024-04-26T04:43:04Z">
    <properties classname="encoding/base64">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/base64" name="TestEncode" time="0.000000" />
    <testcase classname="encoding/base64" name="TestEncoder" time="0.000000" />
    <testcase classname="encoding/base64" name="TestEncoderBuffering" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecode" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoder" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoderBuffering" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecodeCorrupt" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecodeBounds" time="0.000000" />
    <testcase classname="encoding/base64" name="TestEncodedLen" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecodedLen" time="0.000000" />
    <testcase classname="encoding/base64" name="TestBig" time="0.000000" />
    <testcase classname="encoding/base64" name="TestNewLineCharacters" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoderIssue3577" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoderIssue4779" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoderIssue7733" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoderIssue15656" time="0.000000" />
    <testcase classname="encoding/base64" name="TestDecoderRaw" time="0.000000" />
  </testsuite>
  <testsuite tests="20" failures="1" time="0.000000" name="encoding/binary" timestamp="2024-04-26T04:43:05Z">
    <properties classname="encoding/binary">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/binary" name="TestEarlyBoundsChecks" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestEarlyBoundsChecks
panic: runtime error at 0x000000000024e558: index out of range
</failure>
    </testcase>
    <testcase classname="encoding/binary" name="TestLittleEndianRead" time="0.000000" />
    <testcase classname="encoding/binary" name="TestLittleEndianWrite" time="0.000000" />
    <testcase classname="encoding/binary" name="TestLittleEndianPtrWrite" time="0.000000" />
    <testcase classname="encoding/binary" name="TestBigEndianRead" time="0.000000" />
    <testcase classname="encoding/binary" name="TestBigEndianWrite" time="0.000000" />
    <testcase classname="encoding/binary" name="TestBigEndianPtrWrite" time="0.000000" />
    <testcase classname="encoding/binary" name="TestReadSlice" time="0.000000" />
    <testcase classname="encoding/binary" name="TestWriteSlice" time="0.000000" />
    <testcase classname="encoding/binary" name="TestReadBool" time="0.000000" />
    <testcase classname="encoding/binary" name="TestReadBoolSlice" time="0.000000" />
    <testcase classname="encoding/binary" name="TestSliceRoundTrip" time="0.000000" />
    <testcase classname="encoding/binary" name="TestWriteT" time="0.000000" />
    <testcase classname="encoding/binary" name="TestBlankFields" time="0.000000" />
    <testcase classname="encoding/binary" name="TestSizeStructCache" time="0.000000" />
    <testcase classname="encoding/binary" name="TestSizeInvalid" time="0.000000" />
    <testcase classname="encoding/binary" name="TestUnexportedRead" time="0.000000" />
    <testcase classname="encoding/binary" name="TestReadErrorMsg" time="0.000000" />
    <testcase classname="encoding/binary" name="TestReadTruncated" time="0.000000" />
    <testcase classname="encoding/binary" name="TestByteOrder" time="0.000000" />
  </testsuite>
  <testsuite tests="71" failures="0" time="0.000000" name="encoding/csv" timestamp="2024-04-26T04:43:05Z">
    <properties classname="encoding/csv">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/csv" name="TestRead" time="0.000000" />
    <testcase classname="encoding/csv" name="TestWrite" time="0.000000" />
    <testcase classname="encoding/csv" name="TestError" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="encoding/gob" timestamp="2024-04-26T04:43:06Z">
    <properties classname="encoding/gob">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/gob" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo109486335/main /tmp/tinygo109486335/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
/tmp/tinygo109486335/main /tmp/tinygo109486335/main -test.v
/tmp/tinygo109486335/main /tmp/tinygo109486335/main -test.v
checkId: 22 should be 23
panic: bootstrap type wrong id: mapType mapType not &lt;nil&gt;
FAIL	encoding/gob	0.014s
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="12" failures="0" time="0.000000" name="encoding/hex" timestamp="2024-04-26T04:43:07Z">
    <properties classname="encoding/hex">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/hex" name="TestEncode" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDecode" time="0.000000" />
    <testcase classname="encoding/hex" name="TestEncodeToString" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDecodeString" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDecodeErr" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDecodeStringErr" time="0.000000" />
    <testcase classname="encoding/hex" name="TestEncoderDecoder" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDecoderErr" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDumper" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDumper_doubleclose" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDumper_earlyclose" time="0.000000" />
    <testcase classname="encoding/hex" name="TestDump" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="encoding/json" timestamp="2024-04-26T04:43:08Z">
    <properties classname="encoding/json">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="7" failures="1" time="0.000000" name="encoding/pem" timestamp="2024-04-26T04:43:09Z">
    <properties classname="encoding/pem">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/pem" name="TestFuzz" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFuzz
panic: unimplemented: (reflect.Type).NumOut()
</failure>
    </testcase>
    <testcase classname="encoding/pem" name="TestGetLine" time="0.000000" />
    <testcase classname="encoding/pem" name="TestDecode" time="0.000000" />
    <testcase classname="encoding/pem" name="TestBadDecode" time="0.000000" />
    <testcase classname="encoding/pem" name="TestCVE202224675" time="0.000000" />
    <testcase classname="encoding/pem" name="TestEncode" time="0.000000" />
    <testcase classname="encoding/pem" name="TestLineBreaker" time="0.000000" />
  </testsuite>
  <testsuite tests="336" failures="1" time="0.000000" name="encoding/xml" timestamp="2024-04-26T04:43:11Z">
    <properties classname="encoding/xml">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="encoding/xml" name="TestCVE202228131" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestCVE202228131
</failure>
    </testcase>
    <testcase classname="encoding/xml" name="TestMarshal" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalErrors" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshal" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalIndent" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalWriteErrors" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalWriteIOErrors" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalFlush" time="0.000000" />
    <testcase classname="encoding/xml" name="TestStructPointerMarshal" time="0.000000" />
    <testcase classname="encoding/xml" name="TestEncodeToken" time="0.000000" />
    <testcase classname="encoding/xml" name="TestProcInstEncodeToken" time="0.000000" />
    <testcase classname="encoding/xml" name="TestDecodeEncode" time="0.000000" />
    <testcase classname="encoding/xml" name="TestRace9796" time="0.000000" />
    <testcase classname="encoding/xml" name="TestIsValidDirective" time="0.000000" />
    <testcase classname="encoding/xml" name="TestSimpleUseOfEncodeToken" time="0.000000" />
    <testcase classname="encoding/xml" name="TestIssue16158" time="0.000000" />
    <testcase classname="encoding/xml" name="TestInvalidXMLName" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalZeroValue" time="0.000000" />
    <testcase classname="encoding/xml" name="TestClose" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalFeed" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalPaths" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalBadPaths" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalWithoutNameType" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalAttr" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalNS" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalNS" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalNSAttr" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMarshalNSAttr" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshaler" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalIntoInterface" time="0.000000" />
    <testcase classname="encoding/xml" name="TestMalformedComment" time="0.000000" />
    <testcase classname="encoding/xml" name="TestInvalidInnerXMLType" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalEmptyValues" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalWhitespaceValues" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalWhitespaceAttrs" time="0.000000" />
    <testcase classname="encoding/xml" name="TestUnmarshalIntoNil" time="0.000000" />
  </testsuite>
  <testsuite tests="60" failures="19" time="0.000000" name="errors" timestamp="2024-04-26T04:43:13Z">
    <properties classname="errors">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="errors" name="TestAs" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestAs
--- FAIL: TestAs (0.00s)
=== RUN   TestAs/0:As(Errorf(...,_&lt;nil&gt;),_0xffff757df930)
    --- PASS: TestAs/0:As(Errorf(...,_&lt;nil&gt;),_0xffff757df930) (0.00s)
=== RUN   TestAs/1:As(Errorf(...,_pitied_the_fool),_errorT())
    --- PASS: TestAs/1:As(Errorf(...,_pitied_the_fool),_errorT()) (0.00s)
=== RUN   TestAs/2:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df930)
    --- PASS: TestAs/2:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df930) (0.00s)
=== RUN   TestAs/3:As(Errorf(...,_errorT()),_0xffff757df930)
    --- PASS: TestAs/3:As(Errorf(...,_errorT()),_0xffff757df930) (0.00s)
=== RUN   TestAs/4:As(Errorf(...,_wrapped),_errorT(T))
    --- PASS: TestAs/4:As(Errorf(...,_wrapped),_errorT(T)) (0.00s)
=== RUN   TestAs/5:As(Errorf(...,_error),_errorT())
    --- PASS: TestAs/5:As(Errorf(...,_error),_errorT()) (0.00s)
=== RUN   TestAs/6:As(Errorf(...,_path),_0xffff757df930)
    --- PASS: TestAs/6:As(Errorf(...,_path),_0xffff757df930) (0.00s)
=== RUN   TestAs/7:As(Errorf(...,_oh_no),_0xffff757df970)
    --- PASS: TestAs/7:As(Errorf(...,_oh_no),_0xffff757df970) (0.00s)
=== RUN   TestAs/8:As(Errorf(...,_err),_0xffff757df950)
        match: got true; want false
        FailNow is incomplete, requires runtime.Goexit()
        got &amp;errors.errorString{s:"err"}, want &lt;nil&gt;
        FailNow is incomplete, requires runtime.Goexit()
    --- FAIL: TestAs/8:As(Errorf(...,_err),_0xffff757df950) (0.00s)
=== RUN   TestAs/9:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df950)
    --- PASS: TestAs/9:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df950) (0.00s)
=== RUN   TestAs/10:As(Errorf(...,_path_error),_0xffff757df950)
        got errors_test.wrapped{msg:"path error", err:(*fs.PathError)(0xffff757df9b0)}, want &amp;fs.PathError{Op:"open", Path:"non-existing", Err:(*errors.errorString)(0x27b180)}
        FailNow is incomplete, requires runtime.Goexit()
    --- FAIL: TestAs/10:As(Errorf(...,_path_error),_0xffff757df950) (0.00s)
=== RUN   TestAs/11:As(Errorf(...,_multiError),_errorT(poser))
    --- PASS: TestAs/11:As(Errorf(...,_multiError),_errorT(poser)) (0.00s)
=== RUN   TestAs/12:As(Errorf(...,_multiError),_errorT())
    --- PASS: TestAs/12:As(Errorf(...,_multiError),_errorT()) (0.00s)
=== RUN   TestAs/13:As(Errorf(...,_multiError),_errorT(T))
    --- PASS: TestAs/13:As(Errorf(...,_multiError),_errorT(T)) (0.00s)
=== RUN   TestAs/14:As(Errorf(...,_multiError),_errorT(T))
    --- PASS: TestAs/14:As(Errorf(...,_multiError),_errorT(T)) (0.00s)
=== RUN   TestAs/15:As(Errorf(...,_multiError),_errorT(a))
    --- PASS: TestAs/15:As(Errorf(...,_multiError),_errorT(a)) (0.00s)
=== RUN   TestAs/16:As(Errorf(...,_multiError),_0xffff757df950)
        got errors_test.multiErr{errors_test.wrapped{msg:"path error", err:(*fs.PathError)(0xffff757df9b0)}}, want &amp;fs.PathError{Op:"open", Path:"non-existing", Err:(*errors.errorString)(0x27b180)}
        FailNow is incomplete, requires runtime.Goexit()
    --- FAIL: TestAs/16:As(Errorf(...,_multiError),_0xffff757df950) (0.00s)
=== RUN   TestAs/17:As(Errorf(...,_multiError),_errorT(a))
    --- PASS: TestAs/17:As(Errorf(...,_multiError),_errorT(a)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/6:As(Errorf(...,_path),_0xffff757df930)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/6:As(Errorf(...,_path),_0xffff757df930)
    --- PASS: TestAs/6:As(Errorf(...,_path),_0xffff757df930) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/16:As(Errorf(...,_multiError),_0xffff757df950)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/16:As(Errorf(...,_multiError),_0xffff757df950)
        got errors_test.multiErr{errors_test.wrapped{msg:"path error", err:(*fs.PathError)(0xffff757df9b0)}}, want &amp;fs.PathError{Op:"open", Path:"non-existing", Err:(*errors.errorString)(0x27b180)}
        FailNow is incomplete, requires runtime.Goexit()
    --- FAIL: TestAs/16:As(Errorf(...,_multiError),_0xffff757df950) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/11:As(Errorf(...,_multiError),_errorT(poser))" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/11:As(Errorf(...,_multiError),_errorT(poser))
    --- PASS: TestAs/11:As(Errorf(...,_multiError),_errorT(poser)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/4:As(Errorf(...,_wrapped),_errorT(T))" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/4:As(Errorf(...,_wrapped),_errorT(T))
    --- PASS: TestAs/4:As(Errorf(...,_wrapped),_errorT(T)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/17:As(Errorf(...,_multiError),_errorT(a))" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/17:As(Errorf(...,_multiError),_errorT(a))
    --- PASS: TestAs/17:As(Errorf(...,_multiError),_errorT(a)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/13:As(Errorf(...,_multiError),_errorT(T))" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/13:As(Errorf(...,_multiError),_errorT(T))
    --- PASS: TestAs/13:As(Errorf(...,_multiError),_errorT(T)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/15:As(Errorf(...,_multiError),_errorT(a))" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/15:As(Errorf(...,_multiError),_errorT(a))
    --- PASS: TestAs/15:As(Errorf(...,_multiError),_errorT(a)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/0:As(Errorf(...,_&lt;nil&gt;),_0xffff757df930)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/0:As(Errorf(...,_&lt;nil&gt;),_0xffff757df930)
    --- PASS: TestAs/0:As(Errorf(...,_&lt;nil&gt;),_0xffff757df930) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/5:As(Errorf(...,_error),_errorT())" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/5:As(Errorf(...,_error),_errorT())
    --- PASS: TestAs/5:As(Errorf(...,_error),_errorT()) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/2:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df930)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/2:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df930)
    --- PASS: TestAs/2:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df930) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/9:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df950)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/9:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df950)
    --- PASS: TestAs/9:As(Errorf(...,_open_non-existing:_file_does_not_exist),_0xffff757df950) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/12:As(Errorf(...,_multiError),_errorT())" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/12:As(Errorf(...,_multiError),_errorT())
    --- PASS: TestAs/12:As(Errorf(...,_multiError),_errorT()) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/14:As(Errorf(...,_multiError),_errorT(T))" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/14:As(Errorf(...,_multiError),_errorT(T))
    --- PASS: TestAs/14:As(Errorf(...,_multiError),_errorT(T)) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/1:As(Errorf(...,_pitied_the_fool),_errorT())" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/1:As(Errorf(...,_pitied_the_fool),_errorT())
    --- PASS: TestAs/1:As(Errorf(...,_pitied_the_fool),_errorT()) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/3:As(Errorf(...,_errorT()),_0xffff757df930)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/3:As(Errorf(...,_errorT()),_0xffff757df930)
    --- PASS: TestAs/3:As(Errorf(...,_errorT()),_0xffff757df930) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/7:As(Errorf(...,_oh_no),_0xffff757df970)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/7:As(Errorf(...,_oh_no),_0xffff757df970)
    --- PASS: TestAs/7:As(Errorf(...,_oh_no),_0xffff757df970) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/8:As(Errorf(...,_err),_0xffff757df950)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/8:As(Errorf(...,_err),_0xffff757df950)
        match: got true; want false
        FailNow is incomplete, requires runtime.Goexit()
        got &amp;errors.errorString{s:"err"}, want &lt;nil&gt;
        FailNow is incomplete, requires runtime.Goexit()
    --- FAIL: TestAs/8:As(Errorf(...,_err),_0xffff757df950) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestAs/10:As(Errorf(...,_path_error),_0xffff757df950)" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAs/10:As(Errorf(...,_path_error),_0xffff757df950)
        got errors_test.wrapped{msg:"path error", err:(*fs.PathError)(0xffff757df9b0)}, want &amp;fs.PathError{Op:"open", Path:"non-existing", Err:(*errors.errorString)(0x27b180)}
        FailNow is incomplete, requires runtime.Goexit()
    --- FAIL: TestAs/10:As(Errorf(...,_path_error),_0xffff757df950) (0.00s)
</failure>
    </testcase>
    <testcase classname="errors" name="TestNewEqual" time="0.000000" />
    <testcase classname="errors" name="TestErrorMethod" time="0.000000" />
    <testcase classname="errors" name="TestJoinReturnsNil" time="0.000000" />
    <testcase classname="errors" name="TestJoin" time="0.000000" />
    <testcase classname="errors" name="TestJoinErrorMethod" time="0.000000" />
    <testcase classname="errors" name="TestIs" time="0.000000" />
    <testcase classname="errors" name="TestAsValidation" time="0.000000" />
    <testcase classname="errors" name="TestUnwrap" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="expvar" timestamp="2024-04-26T04:43:14Z">
    <properties classname="expvar">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="24" failures="2" time="0.000000" name="flag" timestamp="2024-04-26T04:43:14Z">
    <properties classname="flag">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="flag" name="TestExitCode" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestExitCode
    unexpected exit code for test case {flag:-h flagHandle: expectExit:0} 
        : got -1, expect 0
    unexpected exit code for test case {flag:-help flagHandle: expectExit:0} 
        : got -1, expect 0
    unexpected exit code for test case {flag:-undefined flagHandle: expectExit:2} 
        : got -1, expect 2
    unexpected exit code for test case {flag:-h flagHandle:h expectExit:123} 
        : got -1, expect 123
    unexpected exit code for test case {flag:-help flagHandle:help expectExit:123} 
        : got -1, expect 123
--- FAIL: TestExitCode (0.00s)
</failure>
    </testcase>
    <testcase classname="flag" name="TestDefineAfterSet" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDefineAfterSet
    DefineAfterSet
        : expected panic("flag myFlag set at .*/flag_test.go:.* before being defined"), but got panic("flag myFlag set at ?:0 before being defined")
--- FAIL: TestDefineAfterSet (0.00s)
</failure>
    </testcase>
    <testcase classname="flag" name="TestEverything" time="0.000000" />
    <testcase classname="flag" name="TestGet" time="0.000000" />
    <testcase classname="flag" name="TestUsage" time="0.000000" />
    <testcase classname="flag" name="TestParse" time="0.000000" />
    <testcase classname="flag" name="TestFlagSetParse" time="0.000000" />
    <testcase classname="flag" name="TestUserDefined" time="0.000000" />
    <testcase classname="flag" name="TestUserDefinedFunc" time="0.000000" />
    <testcase classname="flag" name="TestUserDefinedForCommandLine" time="0.000000" />
    <testcase classname="flag" name="TestUserDefinedBool" time="0.000000" />
    <testcase classname="flag" name="TestUserDefinedBoolUsage" time="0.000000" />
    <testcase classname="flag" name="TestSetOutput" time="0.000000" />
    <testcase classname="flag" name="TestChangingArgs" time="0.000000" />
    <testcase classname="flag" name="TestHelp" time="0.000000" />
    <testcase classname="flag" name="TestPrintDefaults" time="0.000000" />
    <testcase classname="flag" name="TestIntFlagOverflow" time="0.000000" />
    <testcase classname="flag" name="TestUsageOutput" time="0.000000" />
    <testcase classname="flag" name="TestGetters" time="0.000000" />
    <testcase classname="flag" name="TestParseError" time="0.000000" />
    <testcase classname="flag" name="TestRangeError" time="0.000000" />
    <testcase classname="flag" name="TestInvalidFlags" time="0.000000" />
    <testcase classname="flag" name="TestRedefinedFlags" time="0.000000" />
    <testcase classname="flag" name="TestUserDefinedBoolFunc" time="0.000000" />
  </testsuite>
  <testsuite tests="3" failures="1" time="0.000000" name="fmt" timestamp="2024-04-26T04:43:14Z">
    <properties classname="fmt">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="fmt" name="TestSprintf" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestSprintf
    Sprintf("%#v", 0x267654) = "(func)(0x267654)" want "(func(*testing.T))(0xPTR)"
panic: runtime error at 0x0000000000231cd0: nil pointer dereference
</failure>
    </testcase>
    <testcase classname="fmt" name="TestErrorf" time="0.000000" />
    <testcase classname="fmt" name="TestFmtInterface" time="0.000000" />
  </testsuite>
  <testsuite tests="8" failures="0" time="0.000000" name="go/ast" timestamp="2024-04-26T04:43:14Z">
    <properties classname="go/ast">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/ast" name="TestCommentText" time="0.000000" />
    <testcase classname="go/ast" name="TestIsDirective" time="0.000000" />
    <testcase classname="go/ast" name="TestPrint" time="0.000000" />
    <testcase classname="go/ast" name="TestCommentMap" time="0.000000" />
    <testcase classname="go/ast" name="TestFilter" time="0.000000" />
    <testcase classname="go/ast" name="TestFilterDuplicates" time="0.000000" />
    <testcase classname="go/ast" name="TestIssue33649" time="0.000000" />
    <testcase classname="go/ast" name="TestIssue28089" time="0.000000" />
  </testsuite>
  <testsuite tests="56" failures="16" time="0.000000" name="go/build" timestamp="2024-04-26T04:43:14Z">
    <properties classname="go/build">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/build" name="TestDotSlashImport" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDotSlashImport
    import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
    import "./file": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestDotSlashImport (0.01s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestLocalDirectory" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestLocalDirectory
    import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestLocalDirectory (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportCmd" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestImportCmd
    import "cmd/internal/objfile": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestImportCmd (0.04s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportDirNotExist" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestImportDirNotExist
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestImportDirNotExist (0.00s)
=== RUN   TestImportDirNotExist/GO111MODULE=off
    --- PASS: TestImportDirNotExist/GO111MODULE=off (0.00s)
=== RUN   TestImportDirNotExist/GO111MODULE=on
        Import(full, 0) got error: "go/build: go list go/build/doesnotexist: fork/exec /usr/local/go/bin/go: operation not implemented\n\n", want "cannot find package" or "is not in std" error
        Import(full, FindOnly) got error: "go/build: go list go/build/doesnotexist: fork/exec /usr/local/go/bin/go: operation not implemented\n\n", want "cannot find package" or "is not in std" error
    --- FAIL: TestImportDirNotExist/GO111MODULE=on (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportVendor" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestImportVendor
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    cannot find vendored c/d from testdata src/a/b directory: import "c/d": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestImportVendor (0.02s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportVendorFailure" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestImportVendorFailure
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestImportVendorFailure (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportVendorParentFailure" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestImportVendorParentFailure
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestImportVendorParentFailure (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportPackageOutsideModule" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestImportPackageOutsideModule
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    error when importing package when no go.mod is present: got "go/build: go list example.com/p: fork/exec /usr/local/go/bin/go: operation not implemented\n\n"; want "go.mod file not found in current directory or any parent directory"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestImportPackageOutsideModule (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestIssue23594" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestIssue23594
    could not import testdata: import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestIssue23594 (0.01s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestMissingImportErrorRepetition" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestMissingImportErrorRepetition
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestMissingImportErrorRepetition (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestCgoImportsIgnored" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestCgoImportsIgnored
    import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestCgoImportsIgnored (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestAllTags" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestAllTags
    import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
    import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestAllTags (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestAllTagsNonSourceFile" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestAllTagsNonSourceFile
    import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestAllTagsNonSourceFile (0.01s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestDirectives" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDirectives
    could not import testdata: import ".": unknown compiler "tinygo"
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestDirectives (0.01s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportDirNotExist/GO111MODULE=off" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestImportDirNotExist/GO111MODULE=off
    --- PASS: TestImportDirNotExist/GO111MODULE=off (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestImportDirNotExist/GO111MODULE=on" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestImportDirNotExist/GO111MODULE=on
        Import(full, 0) got error: "go/build: go list go/build/doesnotexist: fork/exec /usr/local/go/bin/go: operation not implemented\n\n", want "cannot find package" or "is not in std" error
        Import(full, FindOnly) got error: "go/build: go list go/build/doesnotexist: fork/exec /usr/local/go/bin/go: operation not implemented\n\n", want "cannot find package" or "is not in std" error
    --- FAIL: TestImportDirNotExist/GO111MODULE=on (0.00s)
</failure>
    </testcase>
    <testcase classname="go/build" name="TestMatch" time="0.000000" />
    <testcase classname="go/build" name="TestEmptyImport" time="0.000000" />
    <testcase classname="go/build" name="TestEmptyFolderImport" time="0.000000" />
    <testcase classname="go/build" name="TestMultiplePackageImport" time="0.000000" />
    <testcase classname="go/build" name="TestShouldBuild" time="0.000000" />
    <testcase classname="go/build" name="TestGoodOSArchFile" time="0.000000" />
    <testcase classname="go/build" name="TestMatchFile" time="0.000000" />
    <testcase classname="go/build" name="TestExpandSrcDir" time="0.000000" />
    <testcase classname="go/build" name="TestShellSafety" time="0.000000" />
    <testcase classname="go/build" name="TestIssue56509" time="0.000000" />
    <testcase classname="go/build" name="TestDependencies" time="0.000000" />
    <testcase classname="go/build" name="TestStdlibLowercase" time="0.000000" />
    <testcase classname="go/build" name="TestFindImports" time="0.000000" />
    <testcase classname="go/build" name="TestReadGoInfo" time="0.000000" />
    <testcase classname="go/build" name="TestReadComments" time="0.000000" />
    <testcase classname="go/build" name="TestReadFailuresIgnored" time="0.000000" />
    <testcase classname="go/build" name="TestReadEmbed" time="0.000000" />
    <testcase classname="go/build" name="TestGoodOSArch" time="0.000000" />
  </testsuite>
  <testsuite tests="81" failures="0" time="0.000000" name="go/build/constraint" timestamp="2024-04-26T04:43:14Z">
    <properties classname="go/build/constraint">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/build/constraint" name="TestExprString" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestLex" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestParseExpr" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestParseError" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestExprEval" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestParsePlusBuildExpr" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestParse" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestPlusBuildLines" time="0.000000" />
    <testcase classname="go/build/constraint" name="TestGoVersion" time="0.000000" />
  </testsuite>
  <testsuite tests="2" failures="1" time="0.000000" name="go/constant" timestamp="2024-04-26T04:43:15Z">
    <properties classname="go/constant">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/constant" name="TestOps" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestOps
panic: runtime error at 0x0000000000257f90: divide by zero
</failure>
    </testcase>
    <testcase classname="go/constant" name="TestNumbers" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="go/doc" timestamp="2024-04-26T04:43:17Z">
    <properties classname="go/doc">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/doc" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo4240599404/main /tmp/tinygo4240599404/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
/tmp/tinygo4240599404/main /tmp/tinygo4240599404/main -test.v
/tmp/tinygo4240599404/main /tmp/tinygo4240599404/main -test.v
panic: unimplemented: (reflect.Type).NumOut()
FAIL	go/doc	0.008s
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="10059" failures="1" time="0.000000" name="go/doc/comment" timestamp="2024-04-26T04:43:21Z">
    <properties classname="go/doc/comment">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/doc/comment" name="TestStd" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestStd
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    platform cannot run go tool
    FailNow is incomplete, requires runtime.Goexit()
    exec: no command
    FailNow is incomplete, requires runtime.Goexit()
    stdPkgs is out of date: regenerate with 'go generate'
        diff stdPkgs want
        --- stdPkgs
        +++ want
        @@ -1,36 +1,1 @@
        -bufio
        -bytes
        -cmp
        -context
        -crypto
        -embed
        -encoding
        -errors
        -expvar
        -flag
        -fmt
        -hash
        -html
        -image
        -io
        -log
        -maps
        -math
        -mime
        -net
        -os
        -path
        -plugin
        -reflect
        -regexp
        -runtime
        -slices
        -sort
        -strconv
        -strings
        -sync
        -syscall
        -testing
        -time
        -unicode
        -unsafe
        +
--- FAIL: TestStd (0.00s)
</failure>
    </testcase>
    <testcase classname="go/doc/comment" name="TestIsOldHeading" time="0.000000" />
    <testcase classname="go/doc/comment" name="TestAutoURL" time="0.000000" />
    <testcase classname="go/doc/comment" name="Test52353" time="0.000000" />
    <testcase classname="go/doc/comment" name="TestTestdata" time="0.000000" />
    <testcase classname="go/doc/comment" name="TestWrap" time="0.000000" />
  </testsuite>
  <testsuite tests="4" failures="0" time="0.000000" name="go/format" timestamp="2024-04-26T04:43:21Z">
    <properties classname="go/format">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/format" name="TestNode" time="0.000000" />
    <testcase classname="go/format" name="TestNodeNoModify" time="0.000000" />
    <testcase classname="go/format" name="TestSource" time="0.000000" />
    <testcase classname="go/format" name="TestPartial" time="0.000000" />
  </testsuite>
  <testsuite tests="2" failures="2" time="0.000000" name="go/importer" timestamp="2024-04-26T04:43:21Z">
    <properties classname="go/importer">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/importer" name="TestForCompiler" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestForCompiler
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    platform cannot run go tool
    FailNow is incomplete, requires runtime.Goexit()
    go list math/big: exec: no command
    FailNow is incomplete, requires runtime.Goexit()
=== RUN   TestForCompiler/LookupDefault
panic: runtime error at 0x00000000002f3834: nil pointer dereference
</failure>
    </testcase>
    <testcase classname="go/importer" name="TestForCompiler/LookupDefault" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestForCompiler/LookupDefault
panic: runtime error at 0x00000000002f3834: nil pointer dereference
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="43" failures="2" time="0.000000" name="go/parser" timestamp="2024-04-26T04:43:23Z">
    <properties classname="go/parser">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/parser" name="TestParseDepthLimit" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestParseDepthLimit
=== RUN   TestParseDepthLimit/array/small
</failure>
    </testcase>
    <testcase classname="go/parser" name="TestParseDepthLimit/array/small" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestParseDepthLimit/array/small
</failure>
    </testcase>
    <testcase classname="go/parser" name="TestErrors" time="0.000000" />
    <testcase classname="go/parser" name="TestParse" time="0.000000" />
    <testcase classname="go/parser" name="TestParseFile" time="0.000000" />
    <testcase classname="go/parser" name="TestParseExprFrom" time="0.000000" />
    <testcase classname="go/parser" name="TestParseDir" time="0.000000" />
    <testcase classname="go/parser" name="TestIssue42951" time="0.000000" />
    <testcase classname="go/parser" name="TestParseExpr" time="0.000000" />
    <testcase classname="go/parser" name="TestColonEqualsScope" time="0.000000" />
    <testcase classname="go/parser" name="TestVarScope" time="0.000000" />
    <testcase classname="go/parser" name="TestObjects" time="0.000000" />
    <testcase classname="go/parser" name="TestUnresolved" time="0.000000" />
    <testcase classname="go/parser" name="TestCommentGroups" time="0.000000" />
    <testcase classname="go/parser" name="TestLeadAndLineComments" time="0.000000" />
    <testcase classname="go/parser" name="TestIssue9979" time="0.000000" />
    <testcase classname="go/parser" name="TestFileStartEndPos" time="0.000000" />
    <testcase classname="go/parser" name="TestIncompleteSelection" time="0.000000" />
    <testcase classname="go/parser" name="TestLastLineComment" time="0.000000" />
  </testsuite>
  <testsuite tests="12" failures="12" time="0.000000" name="go/printer" timestamp="2024-04-26T04:43:23Z">
    <properties classname="go/printer">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/printer" name="TestFiles/expressions.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/expressions.input
    --- PASS: TestFiles/expressions.input (0.04s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/expressions.input#01" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/expressions.input#01
    --- PASS: TestFiles/expressions.input#01 (0.05s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/declarations.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/declarations.input
    --- PASS: TestFiles/declarations.input (0.03s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles
=== RUN   TestFiles/empty.input
    --- PASS: TestFiles/empty.input (0.00s)
=== RUN   TestFiles/comments.input
    --- PASS: TestFiles/comments.input (0.02s)
=== RUN   TestFiles/comments.input#01
    --- PASS: TestFiles/comments.input#01 (0.01s)
=== RUN   TestFiles/comments2.input
    --- PASS: TestFiles/comments2.input (0.00s)
=== RUN   TestFiles/alignment.input
    --- PASS: TestFiles/alignment.input (0.00s)
=== RUN   TestFiles/linebreaks.input
    --- PASS: TestFiles/linebreaks.input (0.01s)
=== RUN   TestFiles/expressions.input
    --- PASS: TestFiles/expressions.input (0.04s)
=== RUN   TestFiles/expressions.input#01
    --- PASS: TestFiles/expressions.input#01 (0.05s)
=== RUN   TestFiles/declarations.input
    --- PASS: TestFiles/declarations.input (0.03s)
=== RUN   TestFiles/statements.input
    --- PASS: TestFiles/statements.input (0.04s)
=== RUN   TestFiles/slow.input
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/comments.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/comments.input
    --- PASS: TestFiles/comments.input (0.02s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/comments.input#01" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/comments.input#01
    --- PASS: TestFiles/comments.input#01 (0.01s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/alignment.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/alignment.input
    --- PASS: TestFiles/alignment.input (0.00s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/linebreaks.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/linebreaks.input
    --- PASS: TestFiles/linebreaks.input (0.01s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/statements.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/statements.input
    --- PASS: TestFiles/statements.input (0.04s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/empty.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/empty.input
    --- PASS: TestFiles/empty.input (0.00s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/comments2.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/comments2.input
    --- PASS: TestFiles/comments2.input (0.00s)
</failure>
    </testcase>
    <testcase classname="go/printer" name="TestFiles/slow.input" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestFiles/slow.input
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="11" failures="0" time="0.000000" name="go/scanner" timestamp="2024-04-26T04:43:25Z">
    <properties classname="go/scanner">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/scanner" name="TestScan" time="0.000000" />
    <testcase classname="go/scanner" name="TestStripCR" time="0.000000" />
    <testcase classname="go/scanner" name="TestSemicolons" time="0.000000" />
    <testcase classname="go/scanner" name="TestLineDirectives" time="0.000000" />
    <testcase classname="go/scanner" name="TestInvalidLineDirectives" time="0.000000" />
    <testcase classname="go/scanner" name="TestInit" time="0.000000" />
    <testcase classname="go/scanner" name="TestStdErrorHandler" time="0.000000" />
    <testcase classname="go/scanner" name="TestScanErrors" time="0.000000" />
    <testcase classname="go/scanner" name="TestIssue10213" time="0.000000" />
    <testcase classname="go/scanner" name="TestIssue28112" time="0.000000" />
    <testcase classname="go/scanner" name="TestNumbers" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="go/token" timestamp="2024-04-26T04:43:26Z">
    <properties classname="go/token">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/token" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo3411463503/main /tmp/tinygo3411463503/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
/tmp/tinygo3411463503/main /tmp/tinygo3411463503/main -test.v
/tmp/tinygo3411463503/main /tmp/tinygo3411463503/main -test.v
checkId: 22 should be 23
panic: bootstrap type wrong id: mapType mapType not &lt;nil&gt;
FAIL	go/token	0.017s
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="go/types" timestamp="2024-04-26T04:43:26Z">
    <properties classname="go/types">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/types" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	go/types	0.000s
# go/types_test
/usr/local/go/src/go/types/self_test.go:103:4: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="3" failures="0" time="0.000000" name="go/version" timestamp="2024-04-26T04:43:27Z">
    <properties classname="go/version">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="go/version" name="TestCompare" time="0.000000" />
    <testcase classname="go/version" name="TestLang" time="0.000000" />
    <testcase classname="go/version" name="TestIsValid" time="0.000000" />
  </testsuite>
  <testsuite tests="18" failures="0" time="0.000000" name="hash" timestamp="2024-04-26T04:43:28Z">
    <properties classname="hash">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="hash" name="TestMarshalHash" time="0.000000" />
  </testsuite>
  <testsuite tests="2" failures="0" time="0.000000" name="hash/adler32" timestamp="2024-04-26T04:43:33Z">
    <properties classname="hash/adler32">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="hash/adler32" name="TestGolden" time="0.000000" />
    <testcase classname="hash/adler32" name="TestGoldenMarshal" time="0.000000" />
  </testsuite>
  <testsuite tests="8" failures="1" time="0.000000" name="hash/crc32" timestamp="2024-04-26T04:43:34Z">
    <properties classname="hash/crc32">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="hash/crc32" name="TestArchIEEE" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestArchIEEE
    Arch-specific IEEE not available.
    SkipNow is incomplete, requires runtime.Goexit()
panic: arch-specific crc32 instruction for IEEE not available
</failure>
    </testcase>
    <testcase classname="hash/crc32" name="TestCastagnoliRace" time="0.000000" />
    <testcase classname="hash/crc32" name="TestSimple" time="0.000000" />
    <testcase classname="hash/crc32" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="hash/crc32" name="TestMarshalTableMismatch" time="0.000000" />
    <testcase classname="hash/crc32" name="TestSlicing" time="0.000000" />
  </testsuite>
  <testsuite tests="5" failures="0" time="0.000000" name="hash/crc64" timestamp="2024-04-26T04:43:34Z">
    <properties classname="hash/crc64">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="hash/crc64" name="TestGolden" time="0.000000" />
    <testcase classname="hash/crc64" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="hash/crc64" name="TestMarshalTableMismatch" time="0.000000" />
  </testsuite>
  <testsuite tests="19" failures="0" time="0.000000" name="hash/fnv" timestamp="2024-04-26T04:43:35Z">
    <properties classname="hash/fnv">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="hash/fnv" name="TestGolden32" time="0.000000" />
    <testcase classname="hash/fnv" name="TestGolden32a" time="0.000000" />
    <testcase classname="hash/fnv" name="TestGolden64" time="0.000000" />
    <testcase classname="hash/fnv" name="TestGolden64a" time="0.000000" />
    <testcase classname="hash/fnv" name="TestGolden128" time="0.000000" />
    <testcase classname="hash/fnv" name="TestGolden128a" time="0.000000" />
    <testcase classname="hash/fnv" name="TestGoldenMarshal" time="0.000000" />
    <testcase classname="hash/fnv" name="TestIntegrity32" time="0.000000" />
    <testcase classname="hash/fnv" name="TestIntegrity32a" time="0.000000" />
    <testcase classname="hash/fnv" name="TestIntegrity64" time="0.000000" />
    <testcase classname="hash/fnv" name="TestIntegrity64a" time="0.000000" />
    <testcase classname="hash/fnv" name="TestIntegrity128" time="0.000000" />
    <testcase classname="hash/fnv" name="TestIntegrity128a" time="0.000000" />
  </testsuite>
  <testsuite tests="15" failures="1" time="0.000000" name="hash/maphash" timestamp="2024-04-26T04:43:35Z">
    <properties classname="hash/maphash">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="hash/maphash" name="TestSmhasherTwoNonzero" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestSmhasherTwoNonzero
panic: runtime error at 0x000000000022ecf8: out of memory
</failure>
    </testcase>
    <testcase classname="hash/maphash" name="TestUnseededHash" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSeededHash" time="0.000000" />
    <testcase classname="hash/maphash" name="TestHashGrouping" time="0.000000" />
    <testcase classname="hash/maphash" name="TestHashBytesVsString" time="0.000000" />
    <testcase classname="hash/maphash" name="TestHashHighBytes" time="0.000000" />
    <testcase classname="hash/maphash" name="TestRepeat" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSeedFromSum64" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSeedFromSeed" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSeedFromFlush" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSeedFromReset" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSmhasherSanity" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSmhasherAppendedZeros" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSmhasherSmallKeys" time="0.000000" />
    <testcase classname="hash/maphash" name="TestSmhasherZeros" time="0.000000" />
  </testsuite>
  <testsuite tests="3" failures="0" time="0.000000" name="html" timestamp="2024-04-26T04:43:36Z">
    <properties classname="html">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="html" name="TestEntityLength" time="0.000000" />
    <testcase classname="html" name="TestUnescape" time="0.000000" />
    <testcase classname="html" name="TestUnescapeEscape" time="0.000000" />
  </testsuite>
  <testsuite tests="1" failures="1" time="0.000000" name="html/template" timestamp="2024-04-26T04:43:36Z">
    <properties classname="html/template">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="html/template" name="TestAddParseTreeHTML" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddParseTreeHTML
panic: unimplemented: (reflect.Type).NumOut()
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="8" failures="0" time="0.000000" name="image" timestamp="2024-04-26T04:43:38Z">
    <properties classname="image">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="image" name="TestRectangle" time="0.000000" />
    <testcase classname="image" name="TestImage" time="0.000000" />
    <testcase classname="image" name="TestNewXxxBadRectangle" time="0.000000" />
    <testcase classname="image" name="Test16BitsPerColorChannel" time="0.000000" />
    <testcase classname="image" name="TestRGBA64Image" time="0.000000" />
    <testcase classname="image" name="TestYCbCr" time="0.000000" />
    <testcase classname="image" name="TestYCbCrSlicesDontOverlap" time="0.000000" />
    <testcase classname="image" name="TestDecode" time="0.000000" />
  </testsuite>
  <testsuite tests="1" failures="1" time="0.000000" name="image/color" timestamp="2024-04-26T04:43:39Z">
    <properties classname="image/color">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="image/color" name="TestSqDiff" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestSqDiff
panic: unimplemented: (reflect.Type).NumIn()
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="image/color/palette" timestamp="2024-04-26T04:43:42Z">
    <properties classname="image/color/palette">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="9" failures="1" time="0.000000" name="image/draw" timestamp="2024-04-26T04:43:42Z">
    <properties classname="image/draw">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="image/draw" name="TestSqDiff" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestSqDiff
panic: unimplemented: (reflect.Type).NumIn()
</failure>
    </testcase>
    <testcase classname="image/draw" name="TestClip" time="0.000000" />
    <testcase classname="image/draw" name="TestDraw" time="0.000000" />
    <testcase classname="image/draw" name="TestDrawOverlap" time="0.000000" />
    <testcase classname="image/draw" name="TestNonZeroSrcPt" time="0.000000" />
    <testcase classname="image/draw" name="TestFill" time="0.000000" />
    <testcase classname="image/draw" name="TestDrawSrcNonpremultiplied" time="0.000000" />
    <testcase classname="image/draw" name="TestFloydSteinbergCheckerboard" time="0.000000" />
    <testcase classname="image/draw" name="TestPaletted" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="image/gif" timestamp="2024-04-26T04:43:42Z">
    <properties classname="image/gif">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="image/gif" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	image/gif	0.000s
# image/gif
/usr/local/go/src/image/gif/reader_test.go:421:26: s1.HeapAlloc undefined (type *runtime.MemStats has no field or method HeapAlloc)
/usr/local/go/src/image/gif/reader_test.go:421:41: s0.HeapAlloc undefined (type *runtime.MemStats has no field or method HeapAlloc)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="image/jpeg" timestamp="2024-04-26T04:43:42Z">
    <properties classname="image/jpeg">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="image/jpeg" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	image/jpeg	0.000s
# image/jpeg
/usr/local/go/src/image/jpeg/reader_test.go:253:9: undefined: debug.SetTraceback
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="13" failures="1" time="0.000000" name="image/png" timestamp="2024-04-26T04:43:42Z">
    <properties classname="image/png">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="image/png" name="TestDimensionOverflow" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDimensionOverflow
panic: runtime error at 0x000000000025ca64: out of memory
</failure>
    </testcase>
    <testcase classname="image/png" name="TestPaeth" time="0.000000" />
    <testcase classname="image/png" name="TestPaethDecode" time="0.000000" />
    <testcase classname="image/png" name="TestReader" time="0.000000" />
    <testcase classname="image/png" name="TestReaderError" time="0.000000" />
    <testcase classname="image/png" name="TestPalettedDecodeConfig" time="0.000000" />
    <testcase classname="image/png" name="TestInterlaced" time="0.000000" />
    <testcase classname="image/png" name="TestIncompleteIDATOnRowBoundary" time="0.000000" />
    <testcase classname="image/png" name="TestTrailingIDATChunks" time="0.000000" />
    <testcase classname="image/png" name="TestMultipletRNSChunks" time="0.000000" />
    <testcase classname="image/png" name="TestUnknownChunkLengthUnderflow" time="0.000000" />
    <testcase classname="image/png" name="TestPaletted8OutOfRangePixel" time="0.000000" />
    <testcase classname="image/png" name="TestGray8Transparent" time="0.000000" />
  </testsuite>
  <testsuite tests="12" failures="0" time="0.000000" name="index/suffixarray" timestamp="2024-04-26T04:43:43Z">
    <properties classname="index/suffixarray">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="index/suffixarray" name="TestIndex32" time="0.000000" />
    <testcase classname="index/suffixarray" name="TestIndex64" time="0.000000" />
    <testcase classname="index/suffixarray" name="TestNew32" time="0.000000" />
    <testcase classname="index/suffixarray" name="TestNew64" time="0.000000" />
  </testsuite>
  <testsuite tests="60" failures="4" time="0.000000" name="io" timestamp="2024-04-26T04:43:43Z">
    <properties classname="io">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="io" name="TestMultiWriter_WriteStringSingleAlloc" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestMultiWriter_WriteStringSingleAlloc
    num allocations = 0; want 1
--- FAIL: TestMultiWriter_WriteStringSingleAlloc (0.00s)
</failure>
    </testcase>
    <testcase classname="io" name="TestMultiWriterSingleChainFlatten" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestMultiWriterSingleChainFlatten
    multiWriter did not flatten chained multiWriters: expected writeDepth 12, got 4
--- FAIL: TestMultiWriterSingleChainFlatten (0.00s)
</failure>
    </testcase>
    <testcase classname="io" name="TestMultiReaderFlatten" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestMultiReaderFlatten
    multiReader did not flatten chained multiReaders: expected readDepth 3, got 1
--- FAIL: TestMultiReaderFlatten (0.00s)
</failure>
    </testcase>
    <testcase classname="io" name="TestMultiReaderFreesExhaustedReaders" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestMultiReaderFreesExhaustedReaders
    timeout waiting for collection of buf1
    FailNow is incomplete, requires runtime.Goexit()
--- FAIL: TestMultiReaderFreesExhaustedReaders (5.01s)
</failure>
    </testcase>
    <testcase classname="io" name="TestCopy" time="0.000000" />
    <testcase classname="io" name="TestCopyNegative" time="0.000000" />
    <testcase classname="io" name="TestCopyBuffer" time="0.000000" />
    <testcase classname="io" name="TestCopyBufferNil" time="0.000000" />
    <testcase classname="io" name="TestCopyReadFrom" time="0.000000" />
    <testcase classname="io" name="TestCopyWriteTo" time="0.000000" />
    <testcase classname="io" name="TestCopyPriority" time="0.000000" />
    <testcase classname="io" name="TestCopyReadErrWriteErr" time="0.000000" />
    <testcase classname="io" name="TestCopyN" time="0.000000" />
    <testcase classname="io" name="TestCopyNReadFrom" time="0.000000" />
    <testcase classname="io" name="TestCopyNWriteTo" time="0.000000" />
    <testcase classname="io" name="TestCopyNEOF" time="0.000000" />
    <testcase classname="io" name="TestReadAtLeast" time="0.000000" />
    <testcase classname="io" name="TestReadAtLeastWithDataAndEOF" time="0.000000" />
    <testcase classname="io" name="TestReadAtLeastWithDataAndError" time="0.000000" />
    <testcase classname="io" name="TestTeeReader" time="0.000000" />
    <testcase classname="io" name="TestSectionReader_ReadAt" time="0.000000" />
    <testcase classname="io" name="TestSectionReader_Seek" time="0.000000" />
    <testcase classname="io" name="TestSectionReader_Size" time="0.000000" />
    <testcase classname="io" name="TestSectionReader_Max" time="0.000000" />
    <testcase classname="io" name="TestCopyLargeWriter" time="0.000000" />
    <testcase classname="io" name="TestNopCloserWriterToForwarding" time="0.000000" />
    <testcase classname="io" name="TestOffsetWriter_Seek" time="0.000000" />
    <testcase classname="io" name="TestOffsetWriter_WriteAt" time="0.000000" />
    <testcase classname="io" name="TestWriteAt_PositionPriorToBase" time="0.000000" />
    <testcase classname="io" name="TestOffsetWriter_Write" time="0.000000" />
    <testcase classname="io" name="TestMultiReader" time="0.000000" />
    <testcase classname="io" name="TestMultiReaderAsWriterTo" time="0.000000" />
    <testcase classname="io" name="TestMultiWriter" time="0.000000" />
    <testcase classname="io" name="TestMultiWriter_String" time="0.000000" />
    <testcase classname="io" name="TestMultiWriter_StringCheckCall" time="0.000000" />
    <testcase classname="io" name="TestMultiWriterError" time="0.000000" />
    <testcase classname="io" name="TestMultiReaderCopy" time="0.000000" />
    <testcase classname="io" name="TestMultiWriterCopy" time="0.000000" />
    <testcase classname="io" name="TestMultiReaderSingleByteWithEOF" time="0.000000" />
    <testcase classname="io" name="TestMultiReaderFinalEOF" time="0.000000" />
    <testcase classname="io" name="TestInterleavedMultiReader" time="0.000000" />
    <testcase classname="io" name="TestPipe1" time="0.000000" />
    <testcase classname="io" name="TestPipe2" time="0.000000" />
    <testcase classname="io" name="TestPipe3" time="0.000000" />
    <testcase classname="io" name="TestPipeReadClose" time="0.000000" />
    <testcase classname="io" name="TestPipeReadClose2" time="0.000000" />
    <testcase classname="io" name="TestPipeWriteClose" time="0.000000" />
    <testcase classname="io" name="TestPipeWriteClose2" time="0.000000" />
    <testcase classname="io" name="TestWriteEmpty" time="0.000000" />
    <testcase classname="io" name="TestWriteNil" time="0.000000" />
    <testcase classname="io" name="TestWriteAfterWriterClose" time="0.000000" />
    <testcase classname="io" name="TestPipeCloseError" time="0.000000" />
    <testcase classname="io" name="TestPipeConcurrent" time="0.000000" />
  </testsuite>
  <testsuite tests="6" failures="1" time="0.000000" name="io/fs" timestamp="2024-04-26T04:43:43Z">
    <properties classname="io/fs">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="io/fs" name="TestCVE202230630" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestCVE202230630
</failure>
    </testcase>
    <testcase classname="io/fs" name="TestFormatFileInfo" time="0.000000" />
    <testcase classname="io/fs" name="TestFormatDirEntry" time="0.000000" />
    <testcase classname="io/fs" name="TestValidPath" time="0.000000" />
    <testcase classname="io/fs" name="TestGlob" time="0.000000" />
    <testcase classname="io/fs" name="TestGlobError" time="0.000000" />
  </testsuite>
  <testsuite tests="28" failures="0" time="0.000000" name="io/ioutil" timestamp="2024-04-26T04:43:46Z">
    <properties classname="io/ioutil">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="io/ioutil" name="TestReadFile" time="0.000000" />
    <testcase classname="io/ioutil" name="TestWriteFile" time="0.000000" />
    <testcase classname="io/ioutil" name="TestReadOnlyWriteFile" time="0.000000" />
    <testcase classname="io/ioutil" name="TestReadDir" time="0.000000" />
    <testcase classname="io/ioutil" name="TestTempFile" time="0.000000" />
    <testcase classname="io/ioutil" name="TestTempFile_pattern" time="0.000000" />
    <testcase classname="io/ioutil" name="TestTempFile_BadPattern" time="0.000000" />
    <testcase classname="io/ioutil" name="TestTempDir" time="0.000000" />
    <testcase classname="io/ioutil" name="TestTempDir_BadDir" time="0.000000" />
    <testcase classname="io/ioutil" name="TestTempDir_BadPattern" time="0.000000" />
  </testsuite>
  <testsuite tests="9" failures="1" time="0.000000" name="log" timestamp="2024-04-26T04:43:47Z">
    <properties classname="log">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="log" name="TestAll" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestAll
    log output should match "^.*/[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "???:0: hello 23 world"
    log output should match "^.*/[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "???:0: hello 23 world"
    log output should match "^[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "???:0: hello 23 world"
    log output should match "^[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "???:0: hello 23 world"
    log output should match "^[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "???:0: hello 23 world"
    log output should match "^[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "???:0: hello 23 world"
    log output should match "^XXX[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] .*/[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "XXX2024/04/26 04:43:56.244392 ???:0: hello 23 world"
    log output should match "^XXX[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] .*/[A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "XXX2024/04/26 04:43:56.244418 ???:0: hello 23 world"
    log output should match "^XXX[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] [A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "XXX2024/04/26 04:43:56.244658 ???:0: hello 23 world"
    log output should match "^XXX[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] [A-Za-z0-9_\\-]+\\.go:(63|65): hello 23 world$" is "XXX2024/04/26 04:43:56.244676 ???:0: hello 23 world"
    log output should match "^[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] .*/[A-Za-z0-9_\\-]+\\.go:(63|65): XXXhello 23 world$" is "2024/04/26 04:43:56.244699 ???:0: XXXhello 23 world"
    log output should match "^[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] .*/[A-Za-z0-9_\\-]+\\.go:(63|65): XXXhello 23 world$" is "2024/04/26 04:43:56.253043 ???:0: XXXhello 23 world"
    log output should match "^[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] [A-Za-z0-9_\\-]+\\.go:(63|65): XXXhello 23 world$" is "2024/04/26 04:43:56.253068 ???:0: XXXhello 23 world"
    log output should match "^[0-9][0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9]\\.[0-9][0-9][0-9][0-9][0-9][0-9] [A-Za-z0-9_\\-]+\\.go:(63|65): XXXhello 23 world$" is "2024/04/26 04:43:56.253087 ???:0: XXXhello 23 world"
--- FAIL: TestAll (0.02s)
</failure>
    </testcase>
    <testcase classname="log" name="TestDefault" time="0.000000" />
    <testcase classname="log" name="TestOutput" time="0.000000" />
    <testcase classname="log" name="TestNonNewLogger" time="0.000000" />
    <testcase classname="log" name="TestOutputRace" time="0.000000" />
    <testcase classname="log" name="TestFlagAndPrefixSetting" time="0.000000" />
    <testcase classname="log" name="TestUTCFlag" time="0.000000" />
    <testcase classname="log" name="TestEmptyPrintCreatesLine" time="0.000000" />
    <testcase classname="log" name="TestDiscard" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="log/slog" timestamp="2024-04-26T04:43:51Z">
    <properties classname="log/slog">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="log/slog" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo3636628880/main /tmp/tinygo3636628880/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a /tmp/tinygo3636628880/embed-a3a5d08c40939adb7c0e9e4f5b689721-2056532010.o -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
/tmp/tinygo3636628880/main /tmp/tinygo3636628880/main -test.v
/tmp/tinygo3636628880/main /tmp/tinygo3636628880/main -test.v
panic: runtime.Caller failed
FAIL	log/slog	0.019s
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="log/syslog" timestamp="2024-04-26T04:43:51Z">
    <properties classname="log/syslog">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="log/syslog" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	log/syslog	0.000s
# log/syslog
/usr/local/go/src/log/syslog/syslog_test.go:35:21: oe.Temporary undefined (type *net.OpError has no field or method Temporary)
/usr/local/go/src/log/syslog/syslog_test.go:110:15: undefined: net.ListenPacket
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="maps" timestamp="2024-04-26T04:43:52Z">
    <properties classname="maps">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="maps" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo3683976468/main /tmp/tinygo3683976468/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: maps.clone
&gt;&gt;&gt; referenced by maps.go:46 (/usr/local/go/src/maps/maps.go:46)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-E741FD614938CB8F938506574028B662B05CE9D0:(maps.Clone[map[int]int int int])
&gt;&gt;&gt; referenced by maps.go:46 (/usr/local/go/src/maps/maps.go:46)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-E741FD614938CB8F938506574028B662B05CE9D0:(maps.TestCloneLarge)
failed to run tool: ld.lld
FAIL	maps	0.000s
error: failed to link /tmp/tinygo3683976468/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="76" failures="0" time="0.000000" name="math" timestamp="2024-04-26T04:43:53Z">
    <properties classname="math">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="math" name="TestNaN" time="0.000000" />
    <testcase classname="math" name="TestAcos" time="0.000000" />
    <testcase classname="math" name="TestAcosh" time="0.000000" />
    <testcase classname="math" name="TestAsin" time="0.000000" />
    <testcase classname="math" name="TestAsinh" time="0.000000" />
    <testcase classname="math" name="TestAtan" time="0.000000" />
    <testcase classname="math" name="TestAtanh" time="0.000000" />
    <testcase classname="math" name="TestAtan2" time="0.000000" />
    <testcase classname="math" name="TestCbrt" time="0.000000" />
    <testcase classname="math" name="TestCeil" time="0.000000" />
    <testcase classname="math" name="TestCopysign" time="0.000000" />
    <testcase classname="math" name="TestCos" time="0.000000" />
    <testcase classname="math" name="TestCosh" time="0.000000" />
    <testcase classname="math" name="TestErf" time="0.000000" />
    <testcase classname="math" name="TestErfc" time="0.000000" />
    <testcase classname="math" name="TestErfinv" time="0.000000" />
    <testcase classname="math" name="TestErfcinv" time="0.000000" />
    <testcase classname="math" name="TestExp" time="0.000000" />
    <testcase classname="math" name="TestExpm1" time="0.000000" />
    <testcase classname="math" name="TestExp2" time="0.000000" />
    <testcase classname="math" name="TestAbs" time="0.000000" />
    <testcase classname="math" name="TestDim" time="0.000000" />
    <testcase classname="math" name="TestFloor" time="0.000000" />
    <testcase classname="math" name="TestMax" time="0.000000" />
    <testcase classname="math" name="TestMin" time="0.000000" />
    <testcase classname="math" name="TestMod" time="0.000000" />
    <testcase classname="math" name="TestFrexp" time="0.000000" />
    <testcase classname="math" name="TestGamma" time="0.000000" />
    <testcase classname="math" name="TestHypot" time="0.000000" />
    <testcase classname="math" name="TestHypotGo" time="0.000000" />
    <testcase classname="math" name="TestIlogb" time="0.000000" />
    <testcase classname="math" name="TestJ0" time="0.000000" />
    <testcase classname="math" name="TestJ1" time="0.000000" />
    <testcase classname="math" name="TestJn" time="0.000000" />
    <testcase classname="math" name="TestLdexp" time="0.000000" />
    <testcase classname="math" name="TestLgamma" time="0.000000" />
    <testcase classname="math" name="TestLog" time="0.000000" />
    <testcase classname="math" name="TestLogb" time="0.000000" />
    <testcase classname="math" name="TestLog10" time="0.000000" />
    <testcase classname="math" name="TestLog1p" time="0.000000" />
    <testcase classname="math" name="TestLog2" time="0.000000" />
    <testcase classname="math" name="TestModf" time="0.000000" />
    <testcase classname="math" name="TestNextafter32" time="0.000000" />
    <testcase classname="math" name="TestNextafter64" time="0.000000" />
    <testcase classname="math" name="TestPow" time="0.000000" />
    <testcase classname="math" name="TestPow10" time="0.000000" />
    <testcase classname="math" name="TestRemainder" time="0.000000" />
    <testcase classname="math" name="TestRound" time="0.000000" />
    <testcase classname="math" name="TestRoundToEven" time="0.000000" />
    <testcase classname="math" name="TestSignbit" time="0.000000" />
    <testcase classname="math" name="TestSin" time="0.000000" />
    <testcase classname="math" name="TestSincos" time="0.000000" />
    <testcase classname="math" name="TestSinh" time="0.000000" />
    <testcase classname="math" name="TestSqrt" time="0.000000" />
    <testcase classname="math" name="TestTan" time="0.000000" />
    <testcase classname="math" name="TestTanh" time="0.000000" />
    <testcase classname="math" name="TestTrunc" time="0.000000" />
    <testcase classname="math" name="TestY0" time="0.000000" />
    <testcase classname="math" name="TestY1" time="0.000000" />
    <testcase classname="math" name="TestYn" time="0.000000" />
    <testcase classname="math" name="TestFMA" time="0.000000" />
    <testcase classname="math" name="TestFMANegativeArgs" time="0.000000" />
    <testcase classname="math" name="TestLargeCos" time="0.000000" />
    <testcase classname="math" name="TestLargeSin" time="0.000000" />
    <testcase classname="math" name="TestLargeSincos" time="0.000000" />
    <testcase classname="math" name="TestLargeTan" time="0.000000" />
    <testcase classname="math" name="TestTrigReduce" time="0.000000" />
    <testcase classname="math" name="TestFloatMinMax" time="0.000000" />
    <testcase classname="math" name="TestFloatMinima" time="0.000000" />
    <testcase classname="math" name="TestFloat32Sqrt" time="0.000000" />
    <testcase classname="math" name="TestMaxUint" time="0.000000" />
    <testcase classname="math" name="TestMaxInt" time="0.000000" />
    <testcase classname="math" name="TestHugeCos" time="0.000000" />
    <testcase classname="math" name="TestHugeSin" time="0.000000" />
    <testcase classname="math" name="TestHugeSinCos" time="0.000000" />
    <testcase classname="math" name="TestHugeTan" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="math/big" timestamp="2024-04-26T04:43:53Z">
    <properties classname="math/big">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="math/big" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	math/big	0.000s
# math/big
/usr/local/go/src/math/bits/bits.go:472:10: interp: running for more than 3m0s, timing out (executed calls: 35438156)
  %0 = and i64 %x, 4294967295, !dbg !30820

traceback:
/usr/local/go/src/math/bits/bits.go:472:10:
  %0 = and i64 %x, 4294967295, !dbg !30820
/usr/local/go/src/math/bits/bits.go:450:15:
  %9 = call { i64, i64 } @"math/bits.Mul64"(i64 %x, i64 %y, ptr undef), !dbg !30828
/usr/local/go/src/math/big/arith.go:51:20:
  %0 = call { i64, i64 } @"math/bits.Mul"(i64 %x, i64 %y, ptr undef), !dbg !30815
/usr/local/go/src/math/big/arith.go:192:24:
  %13 = call { i64, i64 } @"math/big.mulAddWWW_g"(i64 %12, i64 %y, i64 %6, ptr undef), !dbg !30833
/usr/local/go/src/math/big/arith_decl_pure.go:44:20:
  %12 = call i64 @"math/big.mulAddVWW_g"(ptr %6, i64 %7, i64 %8, ptr %9, i64 %10, i64 %11, i64 %y, i64 %r, ptr undef), !dbg !30816
/usr/local/go/src/math/big/nat.go:191:18:
  %32 = call i64 @"math/big.mulAddVWW"(ptr %26, i64 %27, i64 %28, ptr %29, i64 %30, i64 %31, i64 %y, i64 %r, ptr undef), !dbg !30837
/usr/local/go/src/math/big/natconv.go:213:19:
  %98 = call { ptr, i64, i64 } @"(math/big.nat).mulAddWW"(ptr %92, i64 %93, i64 %94, ptr %95, i64 %96, i64 %97, i64 %47, i64 %89, ptr undef), !dbg !30957
/usr/local/go/src/math/big/nat_test.go:92:31:
  %8 = call { { ptr, i64, i64 }, i64, i64, %runtime._interface } @"(math/big.nat).scan"(ptr null, i64 0, i64 0, ptr %6, ptr %7, i64 0, i1 false, ptr undef), !dbg !30812
/usr/local/go/src/math/big:
  %32 = call { ptr, i64, i64 } @"math/big.natFromString"(ptr %30, i64 %31, ptr undef), !dbg !30819
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="21" failures="5" time="0.000000" name="math/bits" timestamp="2024-04-26T04:43:54Z">
    <properties classname="math/bits">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="math/bits" name="TestDivPanicOverflow" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDivPanicOverflow
    Div should have panicked when y&lt;=hi
--- FAIL: TestDivPanicOverflow (0.00s)
</failure>
    </testcase>
    <testcase classname="math/bits" name="TestDiv32PanicOverflow" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDiv32PanicOverflow
    Div32 should have panicked when y&lt;=hi
--- FAIL: TestDiv32PanicOverflow (0.00s)
</failure>
    </testcase>
    <testcase classname="math/bits" name="TestDiv64PanicOverflow" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDiv64PanicOverflow
    Div64 should have panicked when y&lt;=hi
--- FAIL: TestDiv64PanicOverflow (0.00s)
</failure>
    </testcase>
    <testcase classname="math/bits" name="TestDivPanicZero" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDivPanicZero
    Div should have panicked when y==0
--- FAIL: TestDivPanicZero (0.00s)
</failure>
    </testcase>
    <testcase classname="math/bits" name="TestDiv32PanicZero" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDiv32PanicZero
panic: runtime error at 0x0000000000229298: divide by zero
</failure>
    </testcase>
    <testcase classname="math/bits" name="TestUintSize" time="0.000000" />
    <testcase classname="math/bits" name="TestLeadingZeros" time="0.000000" />
    <testcase classname="math/bits" name="TestTrailingZeros" time="0.000000" />
    <testcase classname="math/bits" name="TestOnesCount" time="0.000000" />
    <testcase classname="math/bits" name="TestRotateLeft" time="0.000000" />
    <testcase classname="math/bits" name="TestReverse" time="0.000000" />
    <testcase classname="math/bits" name="TestReverseBytes" time="0.000000" />
    <testcase classname="math/bits" name="TestLen" time="0.000000" />
    <testcase classname="math/bits" name="TestAddSubUint" time="0.000000" />
    <testcase classname="math/bits" name="TestAddSubUint32" time="0.000000" />
    <testcase classname="math/bits" name="TestAddSubUint64" time="0.000000" />
    <testcase classname="math/bits" name="TestAdd64OverflowPanic" time="0.000000" />
    <testcase classname="math/bits" name="TestSub64OverflowPanic" time="0.000000" />
    <testcase classname="math/bits" name="TestMulDiv" time="0.000000" />
    <testcase classname="math/bits" name="TestMulDiv32" time="0.000000" />
    <testcase classname="math/bits" name="TestMulDiv64" time="0.000000" />
  </testsuite>
  <testsuite tests="24" failures="0" time="0.000000" name="math/cmplx" timestamp="2024-04-26T04:43:55Z">
    <properties classname="math/cmplx">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="math/cmplx" name="TestAbs" time="0.000000" />
    <testcase classname="math/cmplx" name="TestAcos" time="0.000000" />
    <testcase classname="math/cmplx" name="TestAcosh" time="0.000000" />
    <testcase classname="math/cmplx" name="TestAsin" time="0.000000" />
    <testcase classname="math/cmplx" name="TestAsinh" time="0.000000" />
    <testcase classname="math/cmplx" name="TestAtan" time="0.000000" />
    <testcase classname="math/cmplx" name="TestAtanh" time="0.000000" />
    <testcase classname="math/cmplx" name="TestConj" time="0.000000" />
    <testcase classname="math/cmplx" name="TestCos" time="0.000000" />
    <testcase classname="math/cmplx" name="TestCosh" time="0.000000" />
    <testcase classname="math/cmplx" name="TestExp" time="0.000000" />
    <testcase classname="math/cmplx" name="TestIsNaN" time="0.000000" />
    <testcase classname="math/cmplx" name="TestLog" time="0.000000" />
    <testcase classname="math/cmplx" name="TestLog10" time="0.000000" />
    <testcase classname="math/cmplx" name="TestPolar" time="0.000000" />
    <testcase classname="math/cmplx" name="TestPow" time="0.000000" />
    <testcase classname="math/cmplx" name="TestRect" time="0.000000" />
    <testcase classname="math/cmplx" name="TestSin" time="0.000000" />
    <testcase classname="math/cmplx" name="TestSinh" time="0.000000" />
    <testcase classname="math/cmplx" name="TestSqrt" time="0.000000" />
    <testcase classname="math/cmplx" name="TestTan" time="0.000000" />
    <testcase classname="math/cmplx" name="TestTanh" time="0.000000" />
    <testcase classname="math/cmplx" name="TestInfiniteLoopIntanSeries" time="0.000000" />
    <testcase classname="math/cmplx" name="TestTanHuge" time="0.000000" />
  </testsuite>
  <testsuite tests="43" failures="8" time="0.000000" name="math/rand" timestamp="2024-04-26T04:43:56Z">
    <properties classname="math/rand">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="math/rand" name="TestDefaultRace" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace
--- FAIL: TestDefaultRace (0.00s)
=== RUN   TestDefaultRace/0
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/0 (0.00s)
=== RUN   TestDefaultRace/1
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/1 (0.00s)
=== RUN   TestDefaultRace/2
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/2 (0.00s)
=== RUN   TestDefaultRace/3
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/3 (0.00s)
=== RUN   TestDefaultRace/4
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/4 (0.00s)
=== RUN   TestDefaultRace/5
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/5 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestRegress" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestRegress
panic: unimplemented: (reflect.Type).Method()
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestDefaultRace/3" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace/3
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/3 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestDefaultRace/5" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace/5
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/5 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestDefaultRace/0" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace/0
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/0 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestDefaultRace/4" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace/4
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/4 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestDefaultRace/2" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace/2
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/2 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestDefaultRace/1" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestDefaultRace/1
        fork/exec /tmp/tinygo1692772297/main: operation not implemented
    --- FAIL: TestDefaultRace/1 (0.00s)
</failure>
    </testcase>
    <testcase classname="math/rand" name="TestAuto" time="0.000000" />
    <testcase classname="math/rand" name="TestConcurrent" time="0.000000" />
    <testcase classname="math/rand" name="TestStandardNormalValues" time="0.000000" />
    <testcase classname="math/rand" name="TestNonStandardNormalValues" time="0.000000" />
    <testcase classname="math/rand" name="TestStandardExponentialValues" time="0.000000" />
    <testcase classname="math/rand" name="TestNonStandardExponentialValues" time="0.000000" />
    <testcase classname="math/rand" name="TestNormTables" time="0.000000" />
    <testcase classname="math/rand" name="TestExpTables" time="0.000000" />
    <testcase classname="math/rand" name="TestFloat32" time="0.000000" />
    <testcase classname="math/rand" name="TestReadUniformity" time="0.000000" />
    <testcase classname="math/rand" name="TestReadEmpty" time="0.000000" />
    <testcase classname="math/rand" name="TestReadByOneByte" time="0.000000" />
    <testcase classname="math/rand" name="TestReadSeedReset" time="0.000000" />
    <testcase classname="math/rand" name="TestShuffleSmall" time="0.000000" />
    <testcase classname="math/rand" name="TestUniformFactorial" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="math/rand/v2" timestamp="2024-04-26T04:43:56Z">
    <properties classname="math/rand/v2">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="math/rand/v2" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo2564061515/main /tmp/tinygo2564061515/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
ld.lld: error: undefined symbol: internal/chacha8rand.block
&gt;&gt;&gt; referenced by chacha8.go:63 (/usr/local/go/src/internal/chacha8rand/chacha8.go:63)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-41AB6AA57CA8BDAFB9032CE81E8509AB3BA1662B:((*internal/chacha8rand.State).Init)
&gt;&gt;&gt; referenced by chacha8.go:88 (/usr/local/go/src/internal/chacha8rand/chacha8.go:88)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-41AB6AA57CA8BDAFB9032CE81E8509AB3BA1662B:((*math/rand/v2.ChaCha8).Uint64)
&gt;&gt;&gt; referenced by chacha8.go:150 (/usr/local/go/src/internal/chacha8rand/chacha8.go:150)
&gt;&gt;&gt;               /home/vscode/.cache/tinygo/thinlto/llvmcache-41AB6AA57CA8BDAFB9032CE81E8509AB3BA1662B:(math/rand/v2_test.TestChaCha8Marshal)
failed to run tool: ld.lld
FAIL	math/rand/v2	0.000s
error: failed to link /tmp/tinygo2564061515/main: exit status 1
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="14" failures="1" time="0.000000" name="mime" timestamp="2024-04-26T04:43:56Z">
    <properties classname="mime">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="mime" name="TestTypeByExtension_LocalData" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestTypeByExtension_LocalData
panic: runtime error at 0x0000000000237f38: deadlocked: no event source
</failure>
    </testcase>
    <testcase classname="mime" name="TestEncodeWord" time="0.000000" />
    <testcase classname="mime" name="TestEncodedWordLength" time="0.000000" />
    <testcase classname="mime" name="TestDecodeWord" time="0.000000" />
    <testcase classname="mime" name="TestDecodeHeader" time="0.000000" />
    <testcase classname="mime" name="TestCharsetDecoder" time="0.000000" />
    <testcase classname="mime" name="TestCharsetDecoderError" time="0.000000" />
    <testcase classname="mime" name="TestConsumeToken" time="0.000000" />
    <testcase classname="mime" name="TestConsumeValue" time="0.000000" />
    <testcase classname="mime" name="TestConsumeMediaParam" time="0.000000" />
    <testcase classname="mime" name="TestParseMediaType" time="0.000000" />
    <testcase classname="mime" name="TestParseMediaTypeBogus" time="0.000000" />
    <testcase classname="mime" name="TestFormatMediaType" time="0.000000" />
    <testcase classname="mime" name="TestTypeByExtension" time="0.000000" />
  </testsuite>
  <testsuite tests="52" failures="0" time="0.000000" name="mime/multipart" timestamp="2024-04-26T04:43:58Z">
    <properties classname="mime/multipart">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="mime/multipart" name="TestReadForm" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadFormWithNamelessFile" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadFormWitFileNameMaxMemoryOverflow" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadFormMaxMemoryOverflow" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadFormWithTextContentType" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadForm_NoReadAfterEOF" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadForm_NonFileMaxMemory" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadForm_MetadataTooLarge" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadForm_ManyFiles_Combined" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadForm_ManyFiles_Distinct" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadFormLimits" time="0.000000" />
    <testcase classname="mime/multipart" name="TestReadFormEndlessHeaderLine" time="0.000000" />
    <testcase classname="mime/multipart" name="TestBoundaryLine" time="0.000000" />
    <testcase classname="mime/multipart" name="TestNameAccessors" time="0.000000" />
    <testcase classname="mime/multipart" name="TestMultipart" time="0.000000" />
    <testcase classname="mime/multipart" name="TestMultipartOnlyNewlines" time="0.000000" />
    <testcase classname="mime/multipart" name="TestMultipartSlowInput" time="0.000000" />
    <testcase classname="mime/multipart" name="TestVariousTextLineEndings" time="0.000000" />
    <testcase classname="mime/multipart" name="TestLineLimit" time="0.000000" />
    <testcase classname="mime/multipart" name="TestMultipartTruncated" time="0.000000" />
    <testcase classname="mime/multipart" name="TestMultipartStreamReadahead" time="0.000000" />
    <testcase classname="mime/multipart" name="TestLineContinuation" time="0.000000" />
    <testcase classname="mime/multipart" name="TestQuotedPrintableEncoding" time="0.000000" />
    <testcase classname="mime/multipart" name="TestRawPart" time="0.000000" />
    <testcase classname="mime/multipart" name="TestNested" time="0.000000" />
    <testcase classname="mime/multipart" name="TestParse" time="0.000000" />
    <testcase classname="mime/multipart" name="TestParseAllSizes" time="0.000000" />
    <testcase classname="mime/multipart" name="TestNoBoundary" time="0.000000" />
    <testcase classname="mime/multipart" name="TestWriter" time="0.000000" />
    <testcase classname="mime/multipart" name="TestWriterSetBoundary" time="0.000000" />
    <testcase classname="mime/multipart" name="TestWriterBoundaryGoroutines" time="0.000000" />
    <testcase classname="mime/multipart" name="TestSortedHeader" time="0.000000" />
  </testsuite>
  <testsuite tests="5" failures="0" time="0.000000" name="mime/quotedprintable" timestamp="2024-04-26T04:44:01Z">
    <properties classname="mime/quotedprintable">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="mime/quotedprintable" name="TestReader" time="0.000000" />
    <testcase classname="mime/quotedprintable" name="TestExhaustive" time="0.000000" />
    <testcase classname="mime/quotedprintable" name="TestWriter" time="0.000000" />
    <testcase classname="mime/quotedprintable" name="TestWriterBinary" time="0.000000" />
    <testcase classname="mime/quotedprintable" name="TestRoundTrip" time="0.000000" />
  </testsuite>
  <testsuite tests="1" failures="0" time="0.000000" name="net" timestamp="2024-04-26T04:44:03Z">
    <properties classname="net">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net" name="TestParseMAC" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http" timestamp="2024-04-26T04:44:03Z">
    <properties classname="net/http">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/cgi" timestamp="2024-04-26T04:44:04Z">
    <properties classname="net/http/cgi">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/cookiejar" timestamp="2024-04-26T04:44:04Z">
    <properties classname="net/http/cookiejar">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/fcgi" timestamp="2024-04-26T04:44:05Z">
    <properties classname="net/http/fcgi">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/httptest" timestamp="2024-04-26T04:44:05Z">
    <properties classname="net/http/httptest">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/httptrace" timestamp="2024-04-26T04:44:05Z">
    <properties classname="net/http/httptrace">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/httputil" timestamp="2024-04-26T04:44:05Z">
    <properties classname="net/http/httputil">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/http/pprof" timestamp="2024-04-26T04:44:05Z">
    <properties classname="net/http/pprof">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="11" failures="0" time="0.000000" name="net/mail" timestamp="2024-04-26T04:44:06Z">
    <properties classname="net/mail">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net/mail" name="TestParsing" time="0.000000" />
    <testcase classname="net/mail" name="TestDateParsing" time="0.000000" />
    <testcase classname="net/mail" name="TestDateParsingCFWS" time="0.000000" />
    <testcase classname="net/mail" name="TestAddressParsingError" time="0.000000" />
    <testcase classname="net/mail" name="TestAddressParsing" time="0.000000" />
    <testcase classname="net/mail" name="TestAddressParser" time="0.000000" />
    <testcase classname="net/mail" name="TestAddressString" time="0.000000" />
    <testcase classname="net/mail" name="TestAddressParsingAndFormatting" time="0.000000" />
    <testcase classname="net/mail" name="TestAddressFormattingAndParsing" time="0.000000" />
    <testcase classname="net/mail" name="TestEmptyAddress" time="0.000000" />
  </testsuite>
  <testsuite tests="256" failures="8" time="0.000000" name="net/netip" timestamp="2024-04-26T04:44:08Z">
    <properties classname="net/netip">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net/netip" name="TestInlining" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestInlining
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    skipping test: 'go build' unavailable: /usr/local/go/bin/go tool -n compile: fork/exec /usr/local/go/bin/go: operation not implemented
    SkipNow is incomplete, requires runtime.Goexit()
    platform cannot run go tool
    FailNow is incomplete, requires runtime.Goexit()
    go build: exec: no command, 
    FailNow is incomplete, requires runtime.Goexit()
    "(*uint128).halves" is no longer inlinable
    "Addr.BitLen" is no longer inlinable
    "Addr.hasZone" is no longer inlinable
    "Addr.Is4" is no longer inlinable
    "Addr.Is4In6" is no longer inlinable
    "Addr.Is6" is no longer inlinable
    "Addr.IsLoopback" is no longer inlinable
    "Addr.IsMulticast" is no longer inlinable
    "Addr.IsInterfaceLocalMulticast" is no longer inlinable
    "Addr.IsValid" is no longer inlinable
    "Addr.IsUnspecified" is no longer inlinable
    "Addr.Less" is no longer inlinable
    "Addr.Unmap" is no longer inlinable
    "Addr.Zone" is no longer inlinable
    "Addr.v4" is no longer inlinable
    "Addr.v6" is no longer inlinable
    "Addr.v6u16" is no longer inlinable
    "Addr.withoutZone" is no longer inlinable
    "AddrPortFrom" is no longer inlinable
    "AddrPort.Addr" is no longer inlinable
    "AddrPort.Port" is no longer inlinable
    "AddrPort.IsValid" is no longer inlinable
    "Prefix.IsSingleIP" is no longer inlinable
    "Prefix.Masked" is no longer inlinable
    "Prefix.IsValid" is no longer inlinable
    "PrefixFrom" is no longer inlinable
    "Prefix.Addr" is no longer inlinable
    "Prefix.Bits" is no longer inlinable
    "AddrFrom4" is no longer inlinable
    "IPv6LinkLocalAllNodes" is no longer inlinable
    "IPv6Unspecified" is no longer inlinable
    "MustParseAddr" is no longer inlinable
    "MustParseAddrPort" is no longer inlinable
    "MustParsePrefix" is no longer inlinable
    "appendDecimal" is no longer inlinable
    "appendHex" is no longer inlinable
    "uint128.addOne" is no longer inlinable
    "uint128.and" is no longer inlinable
    "uint128.bitsClearedFrom" is no longer inlinable
    "uint128.bitsSetFrom" is no longer inlinable
    "uint128.isZero" is no longer inlinable
    "uint128.not" is no longer inlinable
    "uint128.or" is no longer inlinable
    "uint128.subOne" is no longer inlinable
    "uint128.xor" is no longer inlinable
    "Addr.Next" is no longer inlinable
    "Addr.Prev" is no longer inlinable
--- FAIL: TestInlining (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs
--- FAIL: TestAddrStringAllocs (0.02s)
=== RUN   TestAddrStringAllocs/zero
    --- PASS: TestAddrStringAllocs/zero (0.00s)
=== RUN   TestAddrStringAllocs/ipv4
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv4 (0.00s)
=== RUN   TestAddrStringAllocs/ipv6
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv6 (0.00s)
=== RUN   TestAddrStringAllocs/ipv6+zone
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv6+zone (0.02s)
=== RUN   TestAddrStringAllocs/ipv4-in-ipv6
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv4-in-ipv6 (0.00s)
=== RUN   TestAddrStringAllocs/ipv4-in-ipv6+zone
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv4-in-ipv6+zone (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs/ipv4-in-ipv6+zone" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs/ipv4-in-ipv6+zone
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv4-in-ipv6+zone (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs/zero" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs/zero
    --- PASS: TestAddrStringAllocs/zero (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs/ipv6" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs/ipv6
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv6 (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs/ipv4-in-ipv6" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs/ipv4-in-ipv6
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv4-in-ipv6 (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs/ipv4" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs/ipv4
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv4 (0.00s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestAddrStringAllocs/ipv6+zone" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestAddrStringAllocs/ipv6+zone
        allocs=0, want 1
    --- FAIL: TestAddrStringAllocs/ipv6+zone (0.02s)
</failure>
    </testcase>
    <testcase classname="net/netip" name="TestPrefixValid" time="0.000000" />
    <testcase classname="net/netip" name="TestIPNextPrev" time="0.000000" />
    <testcase classname="net/netip" name="TestIPBitLen" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixContains" time="0.000000" />
    <testcase classname="net/netip" name="TestParseIPError" time="0.000000" />
    <testcase classname="net/netip" name="TestParseAddrPort" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrPortMarshalUnmarshal" time="0.000000" />
    <testcase classname="net/netip" name="TestIPv6Accessor" time="0.000000" />
    <testcase classname="net/netip" name="TestUint128AddSub" time="0.000000" />
    <testcase classname="net/netip" name="TestBitsSetFrom" time="0.000000" />
    <testcase classname="net/netip" name="TestBitsClearedFrom" time="0.000000" />
    <testcase classname="net/netip" name="TestParseAddr" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrFromSlice" time="0.000000" />
    <testcase classname="net/netip" name="TestIPv4Constructors" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrMarshalUnmarshalBinary" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrPortMarshalTextString" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrPortMarshalUnmarshalBinary" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixMarshalTextString" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixMarshalUnmarshalBinary" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrMarshalUnmarshal" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrFrom16" time="0.000000" />
    <testcase classname="net/netip" name="TestIPProperties" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrWellKnown" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrLessCompare" time="0.000000" />
    <testcase classname="net/netip" name="TestAddrPortCompare" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixCompare" time="0.000000" />
    <testcase classname="net/netip" name="TestIPStringExpanded" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixMasking" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixMarshalUnmarshal" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixUnmarshalTextNonZero" time="0.000000" />
    <testcase classname="net/netip" name="TestIs4AndIs6" time="0.000000" />
    <testcase classname="net/netip" name="TestIs4In6" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixMasked" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefix" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixFromInvalidBits" time="0.000000" />
    <testcase classname="net/netip" name="TestParsePrefixAllocs" time="0.000000" />
    <testcase classname="net/netip" name="TestParsePrefixError" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixIsSingleIP" time="0.000000" />
    <testcase classname="net/netip" name="TestAs4" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixOverlaps" time="0.000000" />
    <testcase classname="net/netip" name="TestNoAllocs" time="0.000000" />
    <testcase classname="net/netip" name="TestPrefixString" time="0.000000" />
    <testcase classname="net/netip" name="TestInvalidAddrPortString" time="0.000000" />
    <testcase classname="net/netip" name="TestAsSlice" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/rpc" timestamp="2024-04-26T04:44:08Z">
    <properties classname="net/rpc">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/rpc/jsonrpc" timestamp="2024-04-26T04:44:08Z">
    <properties classname="net/rpc/jsonrpc">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net/rpc/jsonrpc" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	net/rpc/jsonrpc	0.000s
# net/rpc
/usr/local/go/src/net/rpc/server.go:290:14: method.IsExported undefined (type reflect.Method has no field or method IsExported)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/smtp" timestamp="2024-04-26T04:44:09Z">
    <properties classname="net/smtp">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net/smtp" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	net/smtp	0.000s
# net/smtp
/usr/local/go/src/net/smtp/smtp.go:72:24: undefined: tls.Conn
/usr/local/go/src/net/smtp/smtp.go:172:25: undefined: tls.Conn
/usr/local/go/src/net/smtp/smtp_test.go:591:19: undefined: tls.X509KeyPair
/usr/local/go/src/net/smtp/smtp_test.go:598:17: undefined: tls.Listen
/usr/local/go/src/net/smtp/smtp_test.go:600:17: undefined: tls.Listen
/usr/local/go/src/net/smtp/smtp_test.go:1009:9: cs.Version undefined (type tls.ConnectionState has no field or method Version)
/usr/local/go/src/net/smtp/smtp_test.go:1009:29: cs.HandshakeComplete undefined (type tls.ConnectionState has no field or method HandshakeComplete)
/usr/local/go/src/net/smtp/smtp_test.go:1049:24: undefined: tls.X509KeyPair
/usr/local/go/src/net/smtp/smtp_test.go:1054:12: undefined: tls.Server
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="26" failures="0" time="0.000000" name="net/textproto" timestamp="2024-04-26T04:44:10Z">
    <properties classname="net/textproto">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net/textproto" name="TestCanonicalMIMEHeaderKey" time="0.000000" />
    <testcase classname="net/textproto" name="TestMIMEHeaderMultipleValues" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadLine" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadLineLongLine" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadContinuedLine" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadCodeLine" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadDotLines" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadDotBytes" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeader" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderSingle" time="0.000000" />
    <testcase classname="net/textproto" name="TestReaderUpcomingHeaderKeys" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderNoKey" time="0.000000" />
    <testcase classname="net/textproto" name="TestLargeReadMIMEHeader" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderNonCompliant" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderMalformed" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderBytes" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderTrimContinued" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMIMEHeaderAllocations" time="0.000000" />
    <testcase classname="net/textproto" name="TestRFC959Lines" time="0.000000" />
    <testcase classname="net/textproto" name="TestReadMultiLineError" time="0.000000" />
    <testcase classname="net/textproto" name="TestCommonHeaders" time="0.000000" />
    <testcase classname="net/textproto" name="TestIssue46363" time="0.000000" />
    <testcase classname="net/textproto" name="TestPrintfLine" time="0.000000" />
    <testcase classname="net/textproto" name="TestDotWriter" time="0.000000" />
    <testcase classname="net/textproto" name="TestDotWriterCloseEmptyWrite" time="0.000000" />
    <testcase classname="net/textproto" name="TestDotWriterCloseNoWrite" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="net/url" timestamp="2024-04-26T04:44:10Z">
    <properties classname="net/url">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="net/url" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo2311633911/main /tmp/tinygo2311633911/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
/tmp/tinygo2311633911/main /tmp/tinygo2311633911/main -test.v
/tmp/tinygo2311633911/main /tmp/tinygo2311633911/main -test.v
checkId: 22 should be 23
panic: bootstrap type wrong id: mapType mapType not &lt;nil&gt;
FAIL	net/url	0.026s
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="81" failures="0" time="0.000000" name="os" timestamp="2024-04-26T04:44:11Z">
    <properties classname="os">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="os" name="TestFileReaddirnames" time="0.000000" />
    <testcase classname="os" name="TestFileReaddir" time="0.000000" />
    <testcase classname="os" name="TestFileReadDir" time="0.000000" />
    <testcase classname="os" name="TestReadDir" time="0.000000" />
    <testcase classname="os" name="TestReadNonDir" time="0.000000" />
    <testcase classname="os" name="TestExpand" time="0.000000" />
    <testcase classname="os" name="TestConsistentEnviron" time="0.000000" />
    <testcase classname="os" name="TestUnsetenv" time="0.000000" />
    <testcase classname="os" name="TestClearenv" time="0.000000" />
    <testcase classname="os" name="TestLookupEnv" time="0.000000" />
    <testcase classname="os" name="TestEnvironConsistency" time="0.000000" />
    <testcase classname="os" name="TestSetenvUnixEinval" time="0.000000" />
    <testcase classname="os" name="TestExpandEnvShellSpecialVar" time="0.000000" />
    <testcase classname="os" name="TestTempDir" time="0.000000" />
    <testcase classname="os" name="TestChdir" time="0.000000" />
    <testcase classname="os" name="TestStandardFd" time="0.000000" />
    <testcase classname="os" name="TestFd" time="0.000000" />
    <testcase classname="os" name="TestClose" time="0.000000" />
    <testcase classname="os" name="TestGetpagesize" time="0.000000" />
    <testcase classname="os" name="TestMkdir" time="0.000000" />
    <testcase classname="os" name="TestStatBadDir" time="0.000000" />
    <testcase classname="os" name="TestFstat" time="0.000000" />
    <testcase classname="os" name="TestRemove" time="0.000000" />
    <testcase classname="os" name="TestRename" time="0.000000" />
    <testcase classname="os" name="TestRenameOverwriteDest" time="0.000000" />
    <testcase classname="os" name="TestRenameFailed" time="0.000000" />
    <testcase classname="os" name="TestUserHomeDir" time="0.000000" />
    <testcase classname="os" name="TestDirFS" time="0.000000" />
    <testcase classname="os" name="TestDirFSPathsValid" time="0.000000" />
    <testcase classname="os" name="TestChmod" time="0.000000" />
    <testcase classname="os" name="TestHardlink" time="0.000000" />
    <testcase classname="os" name="TestSymlink" time="0.000000" />
    <testcase classname="os" name="TestRead0" time="0.000000" />
    <testcase classname="os" name="TestReadAt0" time="0.000000" />
    <testcase classname="os" name="TestSeek" time="0.000000" />
    <testcase classname="os" name="TestReadAt" time="0.000000" />
    <testcase classname="os" name="TestReadAtOffset" time="0.000000" />
    <testcase classname="os" name="TestReadAtNegativeOffset" time="0.000000" />
    <testcase classname="os" name="TestReadAtEOF" time="0.000000" />
    <testcase classname="os" name="TestWriteAt" time="0.000000" />
    <testcase classname="os" name="TestWriteAtNegativeOffset" time="0.000000" />
    <testcase classname="os" name="TestWriteAtInAppendMode" time="0.000000" />
    <testcase classname="os" name="TestMkdirAll" time="0.000000" />
    <testcase classname="os" name="TestSmokePipe" time="0.000000" />
    <testcase classname="os" name="TestReadFile" time="0.000000" />
    <testcase classname="os" name="TestWriteFile" time="0.000000" />
    <testcase classname="os" name="TestReadOnlyWriteFile" time="0.000000" />
    <testcase classname="os" name="TestRemoveAll" time="0.000000" />
    <testcase classname="os" name="TestRemoveAllLarge" time="0.000000" />
    <testcase classname="os" name="TestRemoveAllDot" time="0.000000" />
    <testcase classname="os" name="TestRemoveAllDotDot" time="0.000000" />
    <testcase classname="os" name="TestRemoveReadOnlyDir" time="0.000000" />
    <testcase classname="os" name="TestRemoveAllButReadOnlyAndPathError" time="0.000000" />
    <testcase classname="os" name="TestRemoveUnreadableDir" time="0.000000" />
    <testcase classname="os" name="TestRemoveAllWithMoreErrorThanReqSize" time="0.000000" />
    <testcase classname="os" name="TestDirAndSymlinkStats" time="0.000000" />
    <testcase classname="os" name="TestFileAndSymlinkStats" time="0.000000" />
    <testcase classname="os" name="TestCreateTemp" time="0.000000" />
    <testcase classname="os" name="TestCreateTempPattern" time="0.000000" />
    <testcase classname="os" name="TestCreateTempBadPattern" time="0.000000" />
    <testcase classname="os" name="TestMkdirTemp" time="0.000000" />
    <testcase classname="os" name="TestMkdirTempBadDir" time="0.000000" />
    <testcase classname="os" name="TestMkdirTempBadPattern" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="os/exec" timestamp="2024-04-26T04:44:11Z">
    <properties classname="os/exec">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="os/signal" timestamp="2024-04-26T04:44:11Z">
    <properties classname="os/signal">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="os/signal" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	os/signal	0.000s
# os/signal
/usr/local/go/src/os/signal/signal_test.go:439:24: t.Deadline undefined (type *testing.T has no field or method Deadline)
/usr/local/go/src/os/signal/signal_test.go:482:24: t.Deadline undefined (type *testing.T has no field or method Deadline)
/usr/local/go/src/os/signal/signal_test.go:562:24: t.Deadline undefined (type *testing.T has no field or method Deadline)
/usr/local/go/src/os/signal/signal_test.go:612:23: t.Deadline undefined (type *testing.T has no field or method Deadline)
/usr/local/go/src/os/signal/signal_test.go:751:25: t.Deadline undefined (type *testing.T has no field or method Deadline)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="os/user" timestamp="2024-04-26T04:44:13Z">
    <properties classname="os/user">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="9" failures="0" time="0.000000" name="path" timestamp="2024-04-26T04:44:13Z">
    <properties classname="path">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="path" name="TestMatch" time="0.000000" />
    <testcase classname="path" name="TestClean" time="0.000000" />
    <testcase classname="path" name="TestCleanMallocs" time="0.000000" />
    <testcase classname="path" name="TestSplit" time="0.000000" />
    <testcase classname="path" name="TestJoin" time="0.000000" />
    <testcase classname="path" name="TestExt" time="0.000000" />
    <testcase classname="path" name="TestBase" time="0.000000" />
    <testcase classname="path" name="TestDir" time="0.000000" />
    <testcase classname="path" name="TestIsAbs" time="0.000000" />
  </testsuite>
  <testsuite tests="3" failures="1" time="0.000000" name="path/filepath" timestamp="2024-04-26T04:44:13Z">
    <properties classname="path/filepath">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="path/filepath" name="TestCVE202230632" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestCVE202230632
</failure>
    </testcase>
    <testcase classname="path/filepath" name="TestMatch" time="0.000000" />
    <testcase classname="path/filepath" name="TestGlob" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="plugin" timestamp="2024-04-26T04:44:17Z">
    <properties classname="plugin">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="plugin" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	plugin	0.000s
# plugin
../../../usr/local/go/src/plugin/plugin_dlopen.go:10:6: not implemented: build constraints in #cgo line
lib/musl/include/limits.h:40:10: fatal: 'bits/limits.h' file not found
../../../usr/local/go/src/plugin/plugin_dlopen.go:12:10: note: in file included from plugin_dlopen.go!cgo.c:5:
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="96" failures="0" time="0.000000" name="reflect" timestamp="2024-04-26T04:44:17Z">
    <properties classname="reflect">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="reflect" name="TestBool" time="0.000000" />
    <testcase classname="reflect" name="TestTypes" time="0.000000" />
    <testcase classname="reflect" name="TestSet" time="0.000000" />
    <testcase classname="reflect" name="TestSetValue" time="0.000000" />
    <testcase classname="reflect" name="TestCanIntUintFloatComplex" time="0.000000" />
    <testcase classname="reflect" name="TestCanSetField" time="0.000000" />
    <testcase classname="reflect" name="TestValueToString" time="0.000000" />
    <testcase classname="reflect" name="TestArrayElemSet" time="0.000000" />
    <testcase classname="reflect" name="TestPtrPointTo" time="0.000000" />
    <testcase classname="reflect" name="TestPtrSetNil" time="0.000000" />
    <testcase classname="reflect" name="TestMapSetNil" time="0.000000" />
    <testcase classname="reflect" name="TestInterfaceGet" time="0.000000" />
    <testcase classname="reflect" name="TestInterfaceValue" time="0.000000" />
    <testcase classname="reflect" name="TestGrow" time="0.000000" />
    <testcase classname="reflect" name="TestAppend" time="0.000000" />
    <testcase classname="reflect" name="TestCopy" time="0.000000" />
    <testcase classname="reflect" name="TestCopyString" time="0.000000" />
    <testcase classname="reflect" name="TestCopyArray" time="0.000000" />
    <testcase classname="reflect" name="TestBigUnnamedStruct" time="0.000000" />
    <testcase classname="reflect" name="TestBigStruct" time="0.000000" />
    <testcase classname="reflect" name="TestDeepEqual" time="0.000000" />
    <testcase classname="reflect" name="TestTypeOf" time="0.000000" />
    <testcase classname="reflect" name="TestDeepEqualRecursiveStruct" time="0.000000" />
    <testcase classname="reflect" name="TestDeepEqualComplexStruct" time="0.000000" />
    <testcase classname="reflect" name="TestDeepEqualComplexStructInequality" time="0.000000" />
    <testcase classname="reflect" name="TestDeepEqualUnexportedMap" time="0.000000" />
    <testcase classname="reflect" name="TestAlignment" time="0.000000" />
    <testcase classname="reflect" name="TestIsNil" time="0.000000" />
    <testcase classname="reflect" name="TestIsZero" time="0.000000" />
    <testcase classname="reflect" name="TestNilPtrValueSub" time="0.000000" />
    <testcase classname="reflect" name="TestMap" time="0.000000" />
    <testcase classname="reflect" name="TestNilMap" time="0.000000" />
    <testcase classname="reflect" name="TestAnonymousFields" time="0.000000" />
    <testcase classname="reflect" name="TestFieldByIndex" time="0.000000" />
    <testcase classname="reflect" name="TestImportPath" time="0.000000" />
    <testcase classname="reflect" name="TestFieldPkgPath" time="0.000000" />
    <testcase classname="reflect" name="TestSmallNegativeInt" time="0.000000" />
    <testcase classname="reflect" name="TestIndex" time="0.000000" />
    <testcase classname="reflect" name="TestTagGet" time="0.000000" />
    <testcase classname="reflect" name="TestBytes" time="0.000000" />
    <testcase classname="reflect" name="TestSetBytes" time="0.000000" />
    <testcase classname="reflect" name="TestComparable" time="0.000000" />
    <testcase classname="reflect" name="TestOverflow" time="0.000000" />
    <testcase classname="reflect" name="TestEmbed" time="0.000000" />
    <testcase classname="reflect" name="TestInvalid" time="0.000000" />
    <testcase classname="reflect" name="TestNames" time="0.000000" />
    <testcase classname="reflect" name="TestSwapper" time="0.000000" />
    <testcase classname="reflect" name="TestAliasNames" time="0.000000" />
    <testcase classname="reflect" name="TestIssue22031" time="0.000000" />
    <testcase classname="reflect" name="TestMapIterNonEmptyMap" time="0.000000" />
    <testcase classname="reflect" name="TestMapIterNilMap" time="0.000000" />
    <testcase classname="reflect" name="TestMapIterNext" time="0.000000" />
    <testcase classname="reflect" name="TestMapIterDelete0" time="0.000000" />
    <testcase classname="reflect" name="TestMapIterDelete1" time="0.000000" />
    <testcase classname="reflect" name="TestNegativeKindString" time="0.000000" />
    <testcase classname="reflect" name="TestValue_Comparable" time="0.000000" />
    <testcase classname="reflect" name="TestTinyConvert" time="0.000000" />
    <testcase classname="reflect" name="TestTypeFor" time="0.000000" />
    <testcase classname="reflect" name="TestTinyIndirectPointers" time="0.000000" />
    <testcase classname="reflect" name="TestTinyMap" time="0.000000" />
    <testcase classname="reflect" name="TestMapInterfaceKeys" time="0.000000" />
    <testcase classname="reflect" name="TestMapInterfaceElem" time="0.000000" />
    <testcase classname="reflect" name="TestTinySlice" time="0.000000" />
    <testcase classname="reflect" name="TestTinyBytes" time="0.000000" />
    <testcase classname="reflect" name="TestTinyNamedTypes" time="0.000000" />
    <testcase classname="reflect" name="TestTinyStruct" time="0.000000" />
    <testcase classname="reflect" name="TestTinyZero" time="0.000000" />
    <testcase classname="reflect" name="TestTinyAddr" time="0.000000" />
    <testcase classname="reflect" name="TestTinyNilType" time="0.000000" />
    <testcase classname="reflect" name="TestTinySetBytes" time="0.000000" />
    <testcase classname="reflect" name="TestTinyNumMethods" time="0.000000" />
    <testcase classname="reflect" name="TestAssignableTo" time="0.000000" />
    <testcase classname="reflect" name="TestConvert" time="0.000000" />
    <testcase classname="reflect" name="TestIssue4040" time="0.000000" />
    <testcase classname="reflect" name="TestFields" time="0.000000" />
    <testcase classname="reflect" name="TestFieldByIndexErr" time="0.000000" />
  </testsuite>
  <testsuite tests="14" failures="1" time="0.000000" name="regexp" timestamp="2024-04-26T04:44:19Z">
    <properties classname="regexp">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="regexp" name="TestOnePassCutoff" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestOnePassCutoff
</failure>
    </testcase>
    <testcase classname="regexp" name="TestGoodCompile" time="0.000000" />
    <testcase classname="regexp" name="TestBadCompile" time="0.000000" />
    <testcase classname="regexp" name="TestMatch" time="0.000000" />
    <testcase classname="regexp" name="TestMatchFunction" time="0.000000" />
    <testcase classname="regexp" name="TestCopyMatch" time="0.000000" />
    <testcase classname="regexp" name="TestReplaceAll" time="0.000000" />
    <testcase classname="regexp" name="TestReplaceAllLiteral" time="0.000000" />
    <testcase classname="regexp" name="TestReplaceAllFunc" time="0.000000" />
    <testcase classname="regexp" name="TestQuoteMeta" time="0.000000" />
    <testcase classname="regexp" name="TestLiteralPrefix" time="0.000000" />
    <testcase classname="regexp" name="TestSubexp" time="0.000000" />
    <testcase classname="regexp" name="TestSplit" time="0.000000" />
    <testcase classname="regexp" name="TestParseAndCompile" time="0.000000" />
  </testsuite>
  <testsuite tests="12" failures="0" time="0.000000" name="regexp/syntax" timestamp="2024-04-26T04:44:20Z">
    <properties classname="regexp/syntax">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="regexp/syntax" name="TestParseSimple" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestParseFoldCase" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestParseLiteral" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestParseMatchNL" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestParseNoMatchNL" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestFoldConstants" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestAppendRangeCollapse" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestParseInvalidRegexps" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestToStringEquivalentParse" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestString" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestCompile" time="0.000000" />
    <testcase classname="regexp/syntax" name="TestSimplify" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime" timestamp="2024-04-26T04:44:22Z">
    <properties classname="runtime">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/cgo" timestamp="2024-04-26T04:44:22Z">
    <properties classname="runtime/cgo">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/coverage" timestamp="2024-04-26T04:44:22Z">
    <properties classname="runtime/coverage">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/debug" timestamp="2024-04-26T04:44:22Z">
    <properties classname="runtime/debug">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/metrics" timestamp="2024-04-26T04:44:22Z">
    <properties classname="runtime/metrics">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/pprof" timestamp="2024-04-26T04:44:23Z">
    <properties classname="runtime/pprof">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/race" timestamp="2024-04-26T04:44:23Z">
    <properties classname="runtime/race">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="runtime/trace" timestamp="2024-04-26T04:44:23Z">
    <properties classname="runtime/trace">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="11" failures="1" time="0.000000" name="slices" timestamp="2024-04-26T04:44:23Z">
    <properties classname="slices">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="slices" name="TestInsertPanics" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestInsertPanics
panic: runtime error at 0x0000000000285364: slice out of range
</failure>
    </testcase>
    <testcase classname="slices" name="TestEqual" time="0.000000" />
    <testcase classname="slices" name="TestEqualFunc" time="0.000000" />
    <testcase classname="slices" name="TestCompare" time="0.000000" />
    <testcase classname="slices" name="TestCompareFunc" time="0.000000" />
    <testcase classname="slices" name="TestIndex" time="0.000000" />
    <testcase classname="slices" name="TestIndexFunc" time="0.000000" />
    <testcase classname="slices" name="TestContains" time="0.000000" />
    <testcase classname="slices" name="TestContainsFunc" time="0.000000" />
    <testcase classname="slices" name="TestInsert" time="0.000000" />
    <testcase classname="slices" name="TestInsertOverlap" time="0.000000" />
  </testsuite>
  <testsuite tests="63" failures="0" time="0.000000" name="sort" timestamp="2024-04-26T04:44:23Z">
    <properties classname="sort">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="sort" name="TestSearch" time="0.000000" />
    <testcase classname="sort" name="TestFind" time="0.000000" />
    <testcase classname="sort" name="TestSearchEfficiency" time="0.000000" />
    <testcase classname="sort" name="TestSearchWrappers" time="0.000000" />
    <testcase classname="sort" name="TestSearchWrappersDontAlloc" time="0.000000" />
    <testcase classname="sort" name="TestSearchExhaustive" time="0.000000" />
    <testcase classname="sort" name="TestFindExhaustive" time="0.000000" />
    <testcase classname="sort" name="TestStructSorts" time="0.000000" />
    <testcase classname="sort" name="TestSortIntSlice" time="0.000000" />
    <testcase classname="sort" name="TestSortFloat64Slice" time="0.000000" />
    <testcase classname="sort" name="TestSortFloat64sCompareSlicesSort" time="0.000000" />
    <testcase classname="sort" name="TestSortStringSlice" time="0.000000" />
    <testcase classname="sort" name="TestInts" time="0.000000" />
    <testcase classname="sort" name="TestFloat64s" time="0.000000" />
    <testcase classname="sort" name="TestStrings" time="0.000000" />
    <testcase classname="sort" name="TestSlice" time="0.000000" />
    <testcase classname="sort" name="TestSortLarge_Random" time="0.000000" />
    <testcase classname="sort" name="TestReverseSortIntSlice" time="0.000000" />
    <testcase classname="sort" name="TestBreakPatterns" time="0.000000" />
    <testcase classname="sort" name="TestReverseRange" time="0.000000" />
    <testcase classname="sort" name="TestNonDeterministicComparison" time="0.000000" />
    <testcase classname="sort" name="TestSortBM" time="0.000000" />
    <testcase classname="sort" name="TestHeapsortBM" time="0.000000" />
    <testcase classname="sort" name="TestStableBM" time="0.000000" />
    <testcase classname="sort" name="TestAdversary" time="0.000000" />
    <testcase classname="sort" name="TestStableInts" time="0.000000" />
    <testcase classname="sort" name="TestStability" time="0.000000" />
    <testcase classname="sort" name="TestCountStableOps" time="0.000000" />
    <testcase classname="sort" name="TestCountSortOps" time="0.000000" />
  </testsuite>
  <testsuite tests="66" failures="0" time="0.000000" name="strconv" timestamp="2024-04-26T04:44:23Z">
    <properties classname="strconv">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="strconv" name="TestParseBool" time="0.000000" />
    <testcase classname="strconv" name="TestFormatBool" time="0.000000" />
    <testcase classname="strconv" name="TestAppendBool" time="0.000000" />
    <testcase classname="strconv" name="TestParseComplex" time="0.000000" />
    <testcase classname="strconv" name="TestParseComplexIncorrectBitSize" time="0.000000" />
    <testcase classname="strconv" name="TestParseFloatPrefix" time="0.000000" />
    <testcase classname="strconv" name="TestAtof" time="0.000000" />
    <testcase classname="strconv" name="TestAtofSlow" time="0.000000" />
    <testcase classname="strconv" name="TestAtofRandom" time="0.000000" />
    <testcase classname="strconv" name="TestRoundTrip" time="0.000000" />
    <testcase classname="strconv" name="TestRoundTrip32" time="0.000000" />
    <testcase classname="strconv" name="TestParseFloatIncorrectBitSize" time="0.000000" />
    <testcase classname="strconv" name="TestParseUint32" time="0.000000" />
    <testcase classname="strconv" name="TestParseUint64" time="0.000000" />
    <testcase classname="strconv" name="TestParseUint64Base" time="0.000000" />
    <testcase classname="strconv" name="TestParseInt32" time="0.000000" />
    <testcase classname="strconv" name="TestParseInt64" time="0.000000" />
    <testcase classname="strconv" name="TestParseInt64Base" time="0.000000" />
    <testcase classname="strconv" name="TestParseUint" time="0.000000" />
    <testcase classname="strconv" name="TestParseInt" time="0.000000" />
    <testcase classname="strconv" name="TestAtoi" time="0.000000" />
    <testcase classname="strconv" name="TestParseIntBitSize" time="0.000000" />
    <testcase classname="strconv" name="TestParseUintBitSize" time="0.000000" />
    <testcase classname="strconv" name="TestParseIntBase" time="0.000000" />
    <testcase classname="strconv" name="TestParseUintBase" time="0.000000" />
    <testcase classname="strconv" name="TestNumError" time="0.000000" />
    <testcase classname="strconv" name="TestNumErrorUnwrap" time="0.000000" />
    <testcase classname="strconv" name="TestFormatComplex" time="0.000000" />
    <testcase classname="strconv" name="TestFormatComplexInvalidBitSize" time="0.000000" />
    <testcase classname="strconv" name="TestDecimalShift" time="0.000000" />
    <testcase classname="strconv" name="TestDecimalRound" time="0.000000" />
    <testcase classname="strconv" name="TestDecimalRoundedInteger" time="0.000000" />
    <testcase classname="strconv" name="TestFp" time="0.000000" />
    <testcase classname="strconv" name="TestFtoa" time="0.000000" />
    <testcase classname="strconv" name="TestFtoaPowersOfTwo" time="0.000000" />
    <testcase classname="strconv" name="TestFtoaRandom" time="0.000000" />
    <testcase classname="strconv" name="TestFormatFloatInvalidBitSize" time="0.000000" />
    <testcase classname="strconv" name="TestMulByLog2Log10" time="0.000000" />
    <testcase classname="strconv" name="TestMulByLog10Log2" time="0.000000" />
    <testcase classname="strconv" name="TestItoa" time="0.000000" />
    <testcase classname="strconv" name="TestUitoa" time="0.000000" />
    <testcase classname="strconv" name="TestFormatUintVarlen" time="0.000000" />
    <testcase classname="strconv" name="TestIsPrint" time="0.000000" />
    <testcase classname="strconv" name="TestIsGraphic" time="0.000000" />
    <testcase classname="strconv" name="TestQuote" time="0.000000" />
    <testcase classname="strconv" name="TestQuoteToASCII" time="0.000000" />
    <testcase classname="strconv" name="TestQuoteToGraphic" time="0.000000" />
    <testcase classname="strconv" name="TestQuoteRune" time="0.000000" />
    <testcase classname="strconv" name="TestQuoteRuneToASCII" time="0.000000" />
    <testcase classname="strconv" name="TestQuoteRuneToGraphic" time="0.000000" />
    <testcase classname="strconv" name="TestCanBackquote" time="0.000000" />
    <testcase classname="strconv" name="TestUnquote" time="0.000000" />
    <testcase classname="strconv" name="TestUnquoteInvalidUTF8" time="0.000000" />
    <testcase classname="strconv" name="TestCountMallocs" time="0.000000" />
    <testcase classname="strconv" name="TestAllocationsFromBytes" time="0.000000" />
    <testcase classname="strconv" name="TestErrorPrefixes" time="0.000000" />
  </testsuite>
  <testsuite tests="71" failures="2" time="0.000000" name="strings" timestamp="2024-04-26T04:44:23Z">
    <properties classname="strings">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="strings" name="TestBuilderGrow" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestBuilderGrow
    growLen=100: got 0 allocs during Write; want 1
    growLen=1000: got 0 allocs during Write; want 1
    growLen=10000: got 0 allocs during Write; want 1
    growLen=100000: got 0 allocs during Write; want 1
--- FAIL: TestBuilderGrow (0.13s)
</failure>
    </testcase>
    <testcase classname="strings" name="TestBuilderAllocs" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestBuilderAllocs
    Builder allocs = 0; want 1
--- FAIL: TestBuilderAllocs (0.01s)
</failure>
    </testcase>
    <testcase classname="strings" name="TestBuilder" time="0.000000" />
    <testcase classname="strings" name="TestBuilderString" time="0.000000" />
    <testcase classname="strings" name="TestBuilderReset" time="0.000000" />
    <testcase classname="strings" name="TestBuilderWrite2" time="0.000000" />
    <testcase classname="strings" name="TestBuilderWriteByte" time="0.000000" />
    <testcase classname="strings" name="TestBuilderCopyPanic" time="0.000000" />
    <testcase classname="strings" name="TestBuilderWriteInvalidRune" time="0.000000" />
    <testcase classname="strings" name="TestClone" time="0.000000" />
    <testcase classname="strings" name="TestCompare" time="0.000000" />
    <testcase classname="strings" name="TestCompareIdenticalString" time="0.000000" />
    <testcase classname="strings" name="TestCompareStrings" time="0.000000" />
    <testcase classname="strings" name="TestReader" time="0.000000" />
    <testcase classname="strings" name="TestReadAfterBigSeek" time="0.000000" />
    <testcase classname="strings" name="TestReaderAt" time="0.000000" />
    <testcase classname="strings" name="TestReaderAtConcurrent" time="0.000000" />
    <testcase classname="strings" name="TestEmptyReaderConcurrent" time="0.000000" />
    <testcase classname="strings" name="TestWriteTo" time="0.000000" />
    <testcase classname="strings" name="TestReaderLenSize" time="0.000000" />
    <testcase classname="strings" name="TestReaderReset" time="0.000000" />
    <testcase classname="strings" name="TestReaderZero" time="0.000000" />
    <testcase classname="strings" name="TestReplacer" time="0.000000" />
    <testcase classname="strings" name="TestPickAlgorithm" time="0.000000" />
    <testcase classname="strings" name="TestWriteStringError" time="0.000000" />
    <testcase classname="strings" name="TestGenericTrieBuilding" time="0.000000" />
    <testcase classname="strings" name="TestFinderNext" time="0.000000" />
    <testcase classname="strings" name="TestFinderCreation" time="0.000000" />
    <testcase classname="strings" name="TestIndex" time="0.000000" />
    <testcase classname="strings" name="TestLastIndex" time="0.000000" />
    <testcase classname="strings" name="TestIndexAny" time="0.000000" />
    <testcase classname="strings" name="TestLastIndexAny" time="0.000000" />
    <testcase classname="strings" name="TestIndexByte" time="0.000000" />
    <testcase classname="strings" name="TestLastIndexByte" time="0.000000" />
    <testcase classname="strings" name="TestIndexRandom" time="0.000000" />
    <testcase classname="strings" name="TestIndexRune" time="0.000000" />
    <testcase classname="strings" name="TestSplit" time="0.000000" />
    <testcase classname="strings" name="TestSplitAfter" time="0.000000" />
    <testcase classname="strings" name="TestFields" time="0.000000" />
    <testcase classname="strings" name="TestFieldsFunc" time="0.000000" />
    <testcase classname="strings" name="TestMap" time="0.000000" />
    <testcase classname="strings" name="TestToUpper" time="0.000000" />
    <testcase classname="strings" name="TestToLower" time="0.000000" />
    <testcase classname="strings" name="TestToValidUTF8" time="0.000000" />
    <testcase classname="strings" name="TestSpecialCase" time="0.000000" />
    <testcase classname="strings" name="TestTrimSpace" time="0.000000" />
    <testcase classname="strings" name="TestTrim" time="0.000000" />
    <testcase classname="strings" name="TestTrimFunc" time="0.000000" />
    <testcase classname="strings" name="TestIndexFunc" time="0.000000" />
    <testcase classname="strings" name="TestCaseConsistency" time="0.000000" />
    <testcase classname="strings" name="TestRepeat" time="0.000000" />
    <testcase classname="strings" name="TestRepeatCatchesOverflow" time="0.000000" />
    <testcase classname="strings" name="TestRunes" time="0.000000" />
    <testcase classname="strings" name="TestReadByte" time="0.000000" />
    <testcase classname="strings" name="TestReadRune" time="0.000000" />
    <testcase classname="strings" name="TestUnreadRuneError" time="0.000000" />
    <testcase classname="strings" name="TestReplace" time="0.000000" />
    <testcase classname="strings" name="TestTitle" time="0.000000" />
    <testcase classname="strings" name="TestContains" time="0.000000" />
    <testcase classname="strings" name="TestContainsAny" time="0.000000" />
    <testcase classname="strings" name="TestContainsRune" time="0.000000" />
    <testcase classname="strings" name="TestContainsFunc" time="0.000000" />
    <testcase classname="strings" name="TestEqualFold" time="0.000000" />
    <testcase classname="strings" name="TestCount" time="0.000000" />
    <testcase classname="strings" name="TestCut" time="0.000000" />
    <testcase classname="strings" name="TestCutPrefix" time="0.000000" />
    <testcase classname="strings" name="TestCutSuffix" time="0.000000" />
  </testsuite>
  <testsuite tests="19" failures="0" time="0.000000" name="sync" timestamp="2024-04-26T04:44:25Z">
    <properties classname="sync">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="sync" name="TestCondSignal" time="0.000000" />
    <testcase classname="sync" name="TestCondBroadcast" time="0.000000" />
    <testcase classname="sync" name="TestCondUnlockNotify" time="0.000000" />
    <testcase classname="sync" name="TestMapLoadAndDelete" time="0.000000" />
    <testcase classname="sync" name="TestMutex" time="0.000000" />
    <testcase classname="sync" name="TestMutexUncontended" time="0.000000" />
    <testcase classname="sync" name="TestMutexConcurrent" time="0.000000" />
    <testcase classname="sync" name="TestRWMutexUncontended" time="0.000000" />
    <testcase classname="sync" name="TestRWMutexWriteToRead" time="0.000000" />
    <testcase classname="sync" name="TestRWMutexReadToWrite" time="0.000000" />
    <testcase classname="sync" name="TestOnceUncontended" time="0.000000" />
    <testcase classname="sync" name="TestOnceConcurrent" time="0.000000" />
    <testcase classname="sync" name="TestOnceFunc" time="0.000000" />
    <testcase classname="sync" name="TestOnceValue" time="0.000000" />
    <testcase classname="sync" name="TestOnceValues" time="0.000000" />
    <testcase classname="sync" name="TestPool" time="0.000000" />
    <testcase classname="sync" name="TestPool_noNew" time="0.000000" />
    <testcase classname="sync" name="TestWaitGroupUncontended" time="0.000000" />
    <testcase classname="sync" name="TestWaitGroup" time="0.000000" />
  </testsuite>
  <testsuite tests="68" failures="6" time="0.000000" name="sync/atomic" timestamp="2024-04-26T04:44:28Z">
    <properties classname="sync/atomic">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="sync/atomic" name="TestStoreLoadSeqCst32" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestStoreLoadSeqCst32
    Skipping test on 1 processor machine
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestStoreLoadSeqCst32 (0.00s)
</failure>
    </testcase>
    <testcase classname="sync/atomic" name="TestStoreLoadSeqCst64" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestStoreLoadSeqCst64
    Skipping test on 1 processor machine
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestStoreLoadSeqCst64 (0.00s)
</failure>
    </testcase>
    <testcase classname="sync/atomic" name="TestStoreLoadRelAcq32" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestStoreLoadRelAcq32
    Skipping test on 1 processor machine
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestStoreLoadRelAcq32 (0.00s)
</failure>
    </testcase>
    <testcase classname="sync/atomic" name="TestStoreLoadRelAcq64" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestStoreLoadRelAcq64
    Skipping test on 1 processor machine
    SkipNow is incomplete, requires runtime.Goexit()
--- FAIL: TestStoreLoadRelAcq64 (0.00s)
</failure>
    </testcase>
    <testcase classname="sync/atomic" name="TestUnaligned64" time="0.000000">
      <failure message="Failed" type="">=== RUN   TestUnaligned64
    test only runs on 32-bit systems
    SkipNow is incomplete, requires runtime.Goexit()
    LoadUint64 did not panic
    LoadUint64Method did not panic
    StoreUint64 did not panic
    StoreUint64Method did not panic
    CompareAndSwapUint64 did not panic
    CompareAndSwapUint64Method did not panic
    AddUint64 did not panic
    AddUint64Method did not panic
--- FAIL: TestUnaligned64 (0.00s)
</failure>
    </testcase>
    <testcase classname="sync/atomic" name="TestNilDeref" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestNilDeref
</failure>
    </testcase>
    <testcase classname="sync/atomic" name="TestSwapInt32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapInt32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapUint32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapUint32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapInt64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapInt64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapUint64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapUint64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapUintptr" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapUintptrMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapPointer" time="0.000000" />
    <testcase classname="sync/atomic" name="TestSwapPointerMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddInt32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddInt32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddUint32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddUint32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddInt64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddInt64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddUint64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddUint64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddUintptr" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAddUintptrMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapInt32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapInt32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapUint32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapUint32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapInt64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapInt64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapUint64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapUint64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapUintptr" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapUintptrMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapPointer" time="0.000000" />
    <testcase classname="sync/atomic" name="TestCompareAndSwapPointerMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadInt32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadInt32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadUint32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadUint32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadInt64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadInt64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadUint64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadUint64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadUintptr" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadUintptrMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadPointer" time="0.000000" />
    <testcase classname="sync/atomic" name="TestLoadPointerMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreInt32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreInt32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreUint32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreUint32Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreInt64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreInt64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreUint64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreUint64Method" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreUintptr" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStoreUintptrMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStorePointer" time="0.000000" />
    <testcase classname="sync/atomic" name="TestStorePointerMethod" time="0.000000" />
    <testcase classname="sync/atomic" name="TestHammer32" time="0.000000" />
    <testcase classname="sync/atomic" name="TestHammer64" time="0.000000" />
    <testcase classname="sync/atomic" name="TestHammerStoreLoad" time="0.000000" />
    <testcase classname="sync/atomic" name="TestAutoAligned64" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="syscall" timestamp="2024-04-26T04:44:31Z">
    <properties classname="syscall">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="syscall" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	syscall	0.000s
# syscall_test
/usr/local/go/src/syscall/creds_test.go:53:19: undefined: net.FileConn
/usr/local/go/src/syscall/creds_test.go:60:19: undefined: net.FileConn
/usr/local/go/src/syscall/exec_linux_test.go:671:17: undefined: user.Lookup
/usr/local/go/src/syscall/exec_linux_test.go:708:14: f.Chmod undefined (type *os.File has no field or method Chmod)
/usr/local/go/src/syscall/exec_pdeathsig_test.go:116:18: undefined: user.Lookup
/usr/local/go/src/syscall/syscall_linux_test.go:244:11: undefined: os.Chown
/usr/local/go/src/syscall/syscall_unix_test.go:183:16: undefined: net.FileConn
/usr/local/go/src/syscall/syscall_unix_test.go:238:14: undefined: net.UnixConn
/usr/local/go/src/syscall/syscall_unix_test.go:242:18: undefined: net.FileConn
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="33" failures="0" time="0.000000" name="testing" timestamp="2024-04-26T04:44:33Z">
    <properties classname="testing">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="testing" name="TestIsSpace" time="0.000000" />
    <testcase classname="testing" name="TestSplitRegexp" time="0.000000" />
    <testcase classname="testing" name="TestMatcher" time="0.000000" />
    <testcase classname="testing" name="TestNaming" time="0.000000" />
    <testcase classname="testing" name="TestCleanup" time="0.000000" />
    <testcase classname="testing" name="TestRunCleanup" time="0.000000" />
    <testcase classname="testing" name="TestCleanupParallelSubtests" time="0.000000" />
    <testcase classname="testing" name="TestNestedCleanup" time="0.000000" />
    <testcase classname="testing" name="TestBenchmark" time="0.000000" />
    <testcase classname="testing" name="TestTempDirInCleanup" time="0.000000" />
    <testcase classname="testing" name="TestTempDirInBenchmark" time="0.000000" />
    <testcase classname="testing" name="TestTempDir" time="0.000000" />
    <testcase classname="testing" name="TestSetenv" time="0.000000" />
    <testcase classname="testing" name="TestTesting" time="0.000000" />
  </testsuite>
  <testsuite tests="5" failures="0" time="0.000000" name="testing/fstest" timestamp="2024-04-26T04:44:33Z">
    <properties classname="testing/fstest">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="testing/fstest" name="TestMapFS" time="0.000000" />
    <testcase classname="testing/fstest" name="TestMapFSChmodDot" time="0.000000" />
    <testcase classname="testing/fstest" name="TestSymlink" time="0.000000" />
    <testcase classname="testing/fstest" name="TestDash" time="0.000000" />
    <testcase classname="testing/fstest" name="TestShuffledFS" time="0.000000" />
  </testsuite>
  <testsuite tests="18" failures="0" time="0.000000" name="testing/iotest" timestamp="2024-04-26T04:44:34Z">
    <properties classname="testing/iotest">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="testing/iotest" name="TestWriteLogger" time="0.000000" />
    <testcase classname="testing/iotest" name="TestWriteLogger_errorOnWrite" time="0.000000" />
    <testcase classname="testing/iotest" name="TestReadLogger" time="0.000000" />
    <testcase classname="testing/iotest" name="TestReadLogger_errorOnRead" time="0.000000" />
    <testcase classname="testing/iotest" name="TestOneByteReader_nonEmptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestOneByteReader_emptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestHalfReader_nonEmptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestHalfReader_emptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestTimeOutReader_nonEmptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestTimeOutReader_emptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestDataErrReader_nonEmptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestDataErrReader_emptyReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestErrReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestStringsReader" time="0.000000" />
    <testcase classname="testing/iotest" name="TestTruncateWriter" time="0.000000" />
  </testsuite>
  <testsuite tests="1" failures="1" time="0.000000" name="testing/quick" timestamp="2024-04-26T04:44:35Z">
    <properties classname="testing/quick">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="testing/quick" name="TestCheckEqual" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestCheckEqual
panic: unimplemented: (reflect.Type).NumIn()
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="testing/slogtest" timestamp="2024-04-26T04:44:39Z">
    <properties classname="testing/slogtest">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="testing/slogtest" name="TestMain" time="0.000000">
      <failure message="Failed" type="">ld.lld --gc-sections -L /workspaces/dc-wasm-go/tinygo -o /tmp/tinygo486517766/main /tmp/tinygo486517766/main.o /home/vscode/.cache/tinygo/compiler-rt-aarch64-unknown-linux-generic/lib.a /home/vscode/.cache/tinygo/obj-3fd9192bbb8c0507447753a8b8972390a979bbb71b28b3ea50e39abe.bc /home/vscode/.cache/tinygo/obj-f79712e5b2f218317551c5961bf12c37f30f9733eb9ffe02c10c0c3a.bc /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/crt1.o /home/vscode/.cache/tinygo/musl-aarch64-unknown-linux-generic/lib.a -mllvm -mcpu=generic --lto-O2 --thinlto-cache-dir=/home/vscode/.cache/tinygo/thinlto -mllvm --rotation-max-header-size=0
/tmp/tinygo486517766/main /tmp/tinygo486517766/main -test.v
/tmp/tinygo486517766/main /tmp/tinygo486517766/main -test.v
panic: runtime.Caller failed
FAIL	testing/slogtest	0.019s
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="18" failures="0" time="0.000000" name="text/scanner" timestamp="2024-04-26T04:44:40Z">
    <properties classname="text/scanner">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="text/scanner" name="TestNext" time="0.000000" />
    <testcase classname="text/scanner" name="TestScan" time="0.000000" />
    <testcase classname="text/scanner" name="TestInvalidExponent" time="0.000000" />
    <testcase classname="text/scanner" name="TestPosition" time="0.000000" />
    <testcase classname="text/scanner" name="TestScanZeroMode" time="0.000000" />
    <testcase classname="text/scanner" name="TestScanSelectedMask" time="0.000000" />
    <testcase classname="text/scanner" name="TestScanCustomIdent" time="0.000000" />
    <testcase classname="text/scanner" name="TestScanNext" time="0.000000" />
    <testcase classname="text/scanner" name="TestScanWhitespace" time="0.000000" />
    <testcase classname="text/scanner" name="TestError" time="0.000000" />
    <testcase classname="text/scanner" name="TestIOError" time="0.000000" />
    <testcase classname="text/scanner" name="TestPos" time="0.000000" />
    <testcase classname="text/scanner" name="TestNextEOFHandling" time="0.000000" />
    <testcase classname="text/scanner" name="TestScanEOFHandling" time="0.000000" />
    <testcase classname="text/scanner" name="TestIssue29723" time="0.000000" />
    <testcase classname="text/scanner" name="TestNumbers" time="0.000000" />
    <testcase classname="text/scanner" name="TestIssue30320" time="0.000000" />
    <testcase classname="text/scanner" name="TestIssue50909" time="0.000000" />
  </testsuite>
  <testsuite tests="3" failures="0" time="0.000000" name="text/tabwriter" timestamp="2024-04-26T04:44:44Z">
    <properties classname="text/tabwriter">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="text/tabwriter" name="Test" time="0.000000" />
    <testcase classname="text/tabwriter" name="TestPanicDuringFlush" time="0.000000" />
    <testcase classname="text/tabwriter" name="TestPanicDuringWrite" time="0.000000" />
  </testsuite>
  <testsuite tests="1" failures="1" time="0.000000" name="text/template" timestamp="2024-04-26T04:44:44Z">
    <properties classname="text/template">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="text/template" name="TestExecute" time="-0.000000">
      <failure message="Failed" type="">=== RUN   TestExecute
panic: unimplemented: (reflect.Type).NumOut()
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="52" failures="0" time="0.000000" name="text/template/parse" timestamp="2024-04-26T04:44:44Z">
    <properties classname="text/template/parse">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="text/template/parse" name="TestLex" time="0.000000" />
    <testcase classname="text/template/parse" name="TestDelims" time="0.000000" />
    <testcase classname="text/template/parse" name="TestDelimsAlphaNumeric" time="0.000000" />
    <testcase classname="text/template/parse" name="TestDelimsAndMarkers" time="0.000000" />
    <testcase classname="text/template/parse" name="TestPos" time="0.000000" />
    <testcase classname="text/template/parse" name="TestNumberParse" time="0.000000" />
    <testcase classname="text/template/parse" name="TestParse" time="0.000000" />
    <testcase classname="text/template/parse" name="TestParseCopy" time="0.000000" />
    <testcase classname="text/template/parse" name="TestParseWithComments" time="0.000000" />
    <testcase classname="text/template/parse" name="TestKeywordsAndFuncs" time="0.000000" />
    <testcase classname="text/template/parse" name="TestSkipFuncCheck" time="0.000000" />
    <testcase classname="text/template/parse" name="TestIsEmpty" time="0.000000" />
    <testcase classname="text/template/parse" name="TestErrorContextWithTreeCopy" time="0.000000" />
    <testcase classname="text/template/parse" name="TestErrors" time="0.000000" />
    <testcase classname="text/template/parse" name="TestBlock" time="0.000000" />
    <testcase classname="text/template/parse" name="TestLineNum" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="time" timestamp="2024-04-26T04:44:45Z">
    <properties classname="time">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="time" name="TestMain" time="0.000000">
      <failure message="Failed" type="">FAIL	time	0.000s
# time_test
/usr/local/go/src/time/sleep_test.go:714:4: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
/usr/local/go/src/time/sleep_test.go:715:4: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
/usr/local/go/src/time/sleep_test.go:716:4: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
/usr/local/go/src/time/sleep_test.go:787:8: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
/usr/local/go/src/time/sleep_test.go:788:8: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
/usr/local/go/src/time/sleep_test.go:789:8: b.ReportMetric undefined (type *testing.B has no field or method ReportMetric)
</failure>
    </testcase>
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="time/tzdata" timestamp="2024-04-26T04:44:46Z">
    <properties classname="time/tzdata">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
  <testsuite tests="28" failures="0" time="0.000000" name="unicode" timestamp="2024-04-26T04:44:47Z">
    <properties classname="unicode">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="unicode" name="TestDigit" time="0.000000" />
    <testcase classname="unicode" name="TestDigitOptimization" time="0.000000" />
    <testcase classname="unicode" name="TestIsControlLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsLetterLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsUpperLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsLowerLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestNumberLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsPrintLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsGraphicLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsPunctLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsSpaceLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsSymbolLatin1" time="0.000000" />
    <testcase classname="unicode" name="TestIsLetter" time="0.000000" />
    <testcase classname="unicode" name="TestIsUpper" time="0.000000" />
    <testcase classname="unicode" name="TestTo" time="0.000000" />
    <testcase classname="unicode" name="TestToUpperCase" time="0.000000" />
    <testcase classname="unicode" name="TestToLowerCase" time="0.000000" />
    <testcase classname="unicode" name="TestToTitleCase" time="0.000000" />
    <testcase classname="unicode" name="TestIsSpace" time="0.000000" />
    <testcase classname="unicode" name="TestLetterOptimizations" time="0.000000" />
    <testcase classname="unicode" name="TestTurkishCase" time="0.000000" />
    <testcase classname="unicode" name="TestSimpleFold" time="0.000000" />
    <testcase classname="unicode" name="TestCalibrate" time="0.000000" />
    <testcase classname="unicode" name="TestLatinOffset" time="0.000000" />
    <testcase classname="unicode" name="TestSpecialCaseNoMapping" time="0.000000" />
    <testcase classname="unicode" name="TestNegativeRune" time="0.000000" />
    <testcase classname="unicode" name="TestCategories" time="0.000000" />
    <testcase classname="unicode" name="TestProperties" time="0.000000" />
  </testsuite>
  <testsuite tests="8" failures="0" time="0.000000" name="unicode/utf16" timestamp="2024-04-26T04:44:47Z">
    <properties classname="unicode/utf16">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="unicode/utf16" name="TestConstants" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestEncode" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestAppendRune" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestEncodeRune" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestAllocationsDecode" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestDecode" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestDecodeRune" time="0.000000" />
    <testcase classname="unicode/utf16" name="TestIsSurrogate" time="0.000000" />
  </testsuite>
  <testsuite tests="14" failures="0" time="0.000000" name="unicode/utf8" timestamp="2024-04-26T04:44:47Z">
    <properties classname="unicode/utf8">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
    <testcase classname="unicode/utf8" name="TestConstants" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestFullRune" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestEncodeRune" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestAppendRune" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestDecodeRune" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestDecodeSurrogateRune" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestSequencing" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestRuntimeConversion" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestDecodeInvalidSequence" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestNegativeRune" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestRuneCount" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestRuneLen" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestValid" time="0.000000" />
    <testcase classname="unicode/utf8" name="TestValidRune" time="0.000000" />
  </testsuite>
  <testsuite tests="0" failures="0" time="0.000000" name="unsafe" timestamp="2024-04-26T04:44:50Z">
    <properties classname="unsafe">
      <property name="go.version" value="go1.22.2 linux/arm64" />
    </properties>
  </testsuite>
</testsuites>